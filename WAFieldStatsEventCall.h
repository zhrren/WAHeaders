/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "WAFieldStatsEvent.h"

@class NSString;

__attribute__((visibility("hidden")))
@interface WAFieldStatsEventCall : WAFieldStatsEvent {
	NSString* _call_peer_platform;
	NSString* _call_peer_app_version;
	NSString* _call_relay_server;
	NSString* _call_test_bucket;
	NSString* _native_sampling_rate;
	NSString* _native_samples_per_frame;
	NSString* _builtin_aec_implementor;
	NSString* _builtin_aec_uuid;
	NSString* _user_description;
	double _call_side;
	double _call_from_ui;
	double _xmpp_status;
	double _peer_xmpp_status;
	double _small_call_button;
	double _call_self_ipv4;
	double _call_peer_ipv4;
	double _call_self_asn;
	double _call_peer_asn;
	double _call_relay_bind_status;
	double _call_p2p_disabled;
	double _call_user_rate;
	double _long_connect;
	double _call_interrupted;
	double _call_ended_interrupted;
	double _call_record_callback_stopped;
	double _call_playback_callback_stopped;
	double _call_record_silence_ratio;
	double _number_of_processors;
	double _call_record_frames_ps;
	double _call_sampling_rate;
	double _builtin_aec_available;
	double _builtin_agc_available;
	double _builtin_ns_available;
	double _builtin_aec_enabled;
	double _call_aec_mode;
	double _call_sw_aec_type;
	double _call_sw_aec_mode;
	double _call_aec_offset;
	double _call_aec_tail_length;
	double _call_echo_likelihood;
	double _call_tones_detected_in_ringback;
	double _call_tones_detected_in_record;
	double _call_calculated_ec_offset;
	double _call_calculated_ec_offset_stddev;
	double _call_agc_mode;
	double _call_ns_mode;
	double _call_audio_engine_type;
	double _call_android_audio_mode;
	double _call_android_record_audio_source;
	double _call_android_record_audio_preset;
	double _call_record_buffer_size;
	double _call_playback_buffer_size;
	double _peer_user_id;
	double _peer_loc;
	double _call_result;
	double _wp_notify_call_failed;
	double _wp_software_ec_matches;
	double _peer_call_result;
	double _caller_hungup_before_connected;
	double _call_server_nack_error_code;
	double _call_term_reason;
	double _call_end_reconnecting;
	double _call_setup_error_type;
	double _call_transport;
	double _call_network;
	double _call_network_subtype;
	double _call_transition_count;
	double _call_transport_relay_to_relay_fallback_count;
	double _call_transport_p2p_to_relay_fallback_count;
	double _encoder_comp_stepdowns;
	double _audio_put_frame_overflow_ps;
	double _audio_get_frame_underflow_ps;
	double _record_circular_buffer_frame_count;
	double _user_rating;
	double _present_end_call_confirmation;
	double _end_call_after_confirmation;
	double _is_ipv6_capable;
	double _call_wakeup_source;
	double _call_recent_record_frames_ps;
	double _call_hist_echo_likelihood;
	double _call_echo_energy;
	double _call_echo_likelihood_before_ec;
	double _call_t;
	double _call_playback_frames_ps;
	double _call_recent_playback_frames_ps;
	double _call_playback_silence_ratio;
	double _call_audio_restart_count;
	double _call_audio_restart_reason;
	double _call_record_max_energy_ratio;
	double _call_ec_restart_count;
	double _call_rx_stopped_t;
	double _call_setup_t;
	double _call_offer_elapsed_t;
	double _call_ringing_t;
	double _call_relay_create_t;
	double _call_min_rtt;
	double _call_max_rtt;
	double _call_avg_rtt;
	double _call_last_rtt;
	double _call_initial_rtt;
	double _call_tx_pkt_loss_pct;
	double _call_tx_avg_bitrate;
	double _call_tx_avg_bwe;
	double _call_tx_min_jitter;
	double _call_tx_max_jitter;
	double _call_tx_avg_jitter;
	double _call_tx_min_loss_period;
	double _call_tx_max_loss_period;
	double _call_tx_avg_loss_period;
	double _call_rx_pkt_loss_pct;
	double _call_rx_avg_bitrate;
	double _call_rx_avg_bwe;
	double _call_rx_min_jitter;
	double _call_rx_max_jitter;
	double _call_rx_avg_jitter;
	double _call_rx_min_loss_period;
	double _call_rx_max_loss_period;
	double _call_rx_avg_loss_period;
	double _call_start_func_t;
	double _call_end_func_t;
	double _call_reject_func_t;
	double _call_accept_func_t;
	double _call_sound_port_func_t;
	double _call_offer_receipt_delay;
	double _avg_encode_t;
	double _avg_decode_t;
	double _avg_play_cb_t;
	double _avg_record_cb_t;
	double _avg_clock_cb_t;
	double _avg_record_get_frame_t;
	double _avg_target_bitrate;
	double _tx_total_bytes;
	double _rx_total_bytes;
	double _tx_total_bitrate;
	double _rx_total_bitrate;
	double _jb_avg_delay;
	double _jb_min_delay;
	double _jb_max_delay;
	double _jb_last_delay;
	double _jb_discards;
	double _jb_empties;
	double _jb_gets;
	double _jb_puts;
	double _rc_minrtt;
	double _rc_maxrtt;
	double _low_data_usage_bitrate;
	double _push_to_call_offer_delay;
	double _call_offer_ack_timout;
	double _pings_sent;
	double _pongs_received;
	double _reflective_ports_diff;
}
@property(assign, nonatomic) double reflective_ports_diff;
@property(assign, nonatomic) double pongs_received;
@property(assign, nonatomic) double pings_sent;
@property(assign, nonatomic) double call_offer_ack_timout;
@property(assign, nonatomic) double push_to_call_offer_delay;
@property(assign, nonatomic) double low_data_usage_bitrate;
@property(assign, nonatomic) double rc_maxrtt;
@property(assign, nonatomic) double rc_minrtt;
@property(assign, nonatomic) double jb_puts;
@property(assign, nonatomic) double jb_gets;
@property(assign, nonatomic) double jb_empties;
@property(assign, nonatomic) double jb_discards;
@property(assign, nonatomic) double jb_last_delay;
@property(assign, nonatomic) double jb_max_delay;
@property(assign, nonatomic) double jb_min_delay;
@property(assign, nonatomic) double jb_avg_delay;
@property(assign, nonatomic) double rx_total_bitrate;
@property(assign, nonatomic) double tx_total_bitrate;
@property(assign, nonatomic) double rx_total_bytes;
@property(assign, nonatomic) double tx_total_bytes;
@property(assign, nonatomic) double avg_target_bitrate;
@property(assign, nonatomic) double avg_record_get_frame_t;
@property(assign, nonatomic) double avg_clock_cb_t;
@property(assign, nonatomic) double avg_record_cb_t;
@property(assign, nonatomic) double avg_play_cb_t;
@property(assign, nonatomic) double avg_decode_t;
@property(assign, nonatomic) double avg_encode_t;
@property(assign, nonatomic) double call_offer_receipt_delay;
@property(assign, nonatomic) double call_sound_port_func_t;
@property(assign, nonatomic) double call_accept_func_t;
@property(assign, nonatomic) double call_reject_func_t;
@property(assign, nonatomic) double call_end_func_t;
@property(assign, nonatomic) double call_start_func_t;
@property(assign, nonatomic) double call_rx_avg_loss_period;
@property(assign, nonatomic) double call_rx_max_loss_period;
@property(assign, nonatomic) double call_rx_min_loss_period;
@property(assign, nonatomic) double call_rx_avg_jitter;
@property(assign, nonatomic) double call_rx_max_jitter;
@property(assign, nonatomic) double call_rx_min_jitter;
@property(assign, nonatomic) double call_rx_avg_bwe;
@property(assign, nonatomic) double call_rx_avg_bitrate;
@property(assign, nonatomic) double call_rx_pkt_loss_pct;
@property(assign, nonatomic) double call_tx_avg_loss_period;
@property(assign, nonatomic) double call_tx_max_loss_period;
@property(assign, nonatomic) double call_tx_min_loss_period;
@property(assign, nonatomic) double call_tx_avg_jitter;
@property(assign, nonatomic) double call_tx_max_jitter;
@property(assign, nonatomic) double call_tx_min_jitter;
@property(assign, nonatomic) double call_tx_avg_bwe;
@property(assign, nonatomic) double call_tx_avg_bitrate;
@property(assign, nonatomic) double call_tx_pkt_loss_pct;
@property(assign, nonatomic) double call_initial_rtt;
@property(assign, nonatomic) double call_last_rtt;
@property(assign, nonatomic) double call_avg_rtt;
@property(assign, nonatomic) double call_max_rtt;
@property(assign, nonatomic) double call_min_rtt;
@property(assign, nonatomic) double call_relay_create_t;
@property(assign, nonatomic) double call_ringing_t;
@property(assign, nonatomic) double call_offer_elapsed_t;
@property(assign, nonatomic) double call_setup_t;
@property(assign, nonatomic) double call_rx_stopped_t;
@property(assign, nonatomic) double call_ec_restart_count;
@property(assign, nonatomic) double call_record_max_energy_ratio;
@property(assign, nonatomic) double call_audio_restart_reason;
@property(assign, nonatomic) double call_audio_restart_count;
@property(assign, nonatomic) double call_playback_silence_ratio;
@property(assign, nonatomic) double call_recent_playback_frames_ps;
@property(assign, nonatomic) double call_playback_frames_ps;
@property(assign, nonatomic) double call_t;
@property(assign, nonatomic) double call_echo_likelihood_before_ec;
@property(assign, nonatomic) double call_echo_energy;
@property(assign, nonatomic) double call_hist_echo_likelihood;
@property(assign, nonatomic) double call_recent_record_frames_ps;
@property(assign, nonatomic) double call_wakeup_source;
@property(assign, nonatomic) double is_ipv6_capable;
@property(assign, nonatomic) double end_call_after_confirmation;
@property(assign, nonatomic) double present_end_call_confirmation;
@property(retain, nonatomic) NSString* user_description;
@property(assign, nonatomic) double user_rating;
@property(assign, nonatomic) double record_circular_buffer_frame_count;
@property(assign, nonatomic) double audio_get_frame_underflow_ps;
@property(assign, nonatomic) double audio_put_frame_overflow_ps;
@property(assign, nonatomic) double encoder_comp_stepdowns;
@property(assign, nonatomic) double call_transport_p2p_to_relay_fallback_count;
@property(assign, nonatomic) double call_transport_relay_to_relay_fallback_count;
@property(assign, nonatomic) double call_transition_count;
@property(assign, nonatomic) double call_network_subtype;
@property(assign, nonatomic) double call_network;
@property(assign, nonatomic) double call_transport;
@property(assign, nonatomic) double call_setup_error_type;
@property(assign, nonatomic) double call_end_reconnecting;
@property(assign, nonatomic) double call_term_reason;
@property(assign, nonatomic) double call_server_nack_error_code;
@property(assign, nonatomic) double caller_hungup_before_connected;
@property(assign, nonatomic) double peer_call_result;
@property(assign, nonatomic) double wp_software_ec_matches;
@property(assign, nonatomic) double wp_notify_call_failed;
@property(assign, nonatomic) double call_result;
@property(assign, nonatomic) double peer_loc;
@property(assign, nonatomic) double peer_user_id;
@property(assign, nonatomic) double call_playback_buffer_size;
@property(assign, nonatomic) double call_record_buffer_size;
@property(assign, nonatomic) double call_android_record_audio_preset;
@property(assign, nonatomic) double call_android_record_audio_source;
@property(assign, nonatomic) double call_android_audio_mode;
@property(assign, nonatomic) double call_audio_engine_type;
@property(assign, nonatomic) double call_ns_mode;
@property(assign, nonatomic) double call_agc_mode;
@property(assign, nonatomic) double call_calculated_ec_offset_stddev;
@property(assign, nonatomic) double call_calculated_ec_offset;
@property(assign, nonatomic) double call_tones_detected_in_record;
@property(assign, nonatomic) double call_tones_detected_in_ringback;
@property(assign, nonatomic) double call_echo_likelihood;
@property(assign, nonatomic) double call_aec_tail_length;
@property(assign, nonatomic) double call_aec_offset;
@property(assign, nonatomic) double call_sw_aec_mode;
@property(assign, nonatomic) double call_sw_aec_type;
@property(assign, nonatomic) double call_aec_mode;
@property(assign, nonatomic) double builtin_aec_enabled;
@property(retain, nonatomic) NSString* builtin_aec_uuid;
@property(retain, nonatomic) NSString* builtin_aec_implementor;
@property(assign, nonatomic) double builtin_ns_available;
@property(assign, nonatomic) double builtin_agc_available;
@property(assign, nonatomic) double builtin_aec_available;
@property(retain, nonatomic) NSString* native_samples_per_frame;
@property(retain, nonatomic) NSString* native_sampling_rate;
@property(assign, nonatomic) double call_sampling_rate;
@property(assign, nonatomic) double call_record_frames_ps;
@property(assign, nonatomic) double number_of_processors;
@property(assign, nonatomic) double call_record_silence_ratio;
@property(assign, nonatomic) double call_playback_callback_stopped;
@property(assign, nonatomic) double call_record_callback_stopped;
@property(assign, nonatomic) double call_ended_interrupted;
@property(assign, nonatomic) double call_interrupted;
@property(assign, nonatomic) double long_connect;
@property(assign, nonatomic) double call_user_rate;
@property(retain, nonatomic) NSString* call_test_bucket;
@property(assign, nonatomic) double call_p2p_disabled;
@property(retain, nonatomic) NSString* call_relay_server;
@property(assign, nonatomic) double call_relay_bind_status;
@property(retain, nonatomic) NSString* call_peer_app_version;
@property(assign, nonatomic) double call_peer_asn;
@property(assign, nonatomic) double call_self_asn;
@property(assign, nonatomic) double call_peer_ipv4;
@property(assign, nonatomic) double call_self_ipv4;
@property(assign, nonatomic) double small_call_button;
@property(retain, nonatomic) NSString* call_peer_platform;
@property(assign, nonatomic) double peer_xmpp_status;
@property(assign, nonatomic) double xmpp_status;
@property(assign, nonatomic) double call_from_ui;
@property(assign, nonatomic) double call_side;
-(void).cxx_destruct;
-(void)submit;
-(id)init;
@end

