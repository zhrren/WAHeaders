/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "WhatsApp-Structs.h"
#import "CLLocationManagerDelegate.h"
#import "NSFetchedResultsControllerDelegate.h"
#import "WAUpgradeCallback.h"
#import "WAMediaUploadOperationDelegate.h"
#import </libobjc.A.h>
#import "CSSearchableIndexDelegate.h"

@class NSMutableSet, CLLocation, WAMessageSpotlightIndexer, NSURL, NSString, WATask, NSMutableDictionary, WASearchEngine, NSFetchedResultsController, NSMutableArray, NSOperationQueue, NSManagedObjectModel, NSPersistentStoreCoordinator, WABlockedContactsList, NSManagedObjectContext, NSCondition, WAChatSessionSpotlightIndexer, NSPersistentStore, CLLocationManager;
@protocol WAChatStorageDelegate, OS_dispatch_group, OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface WAChatStorage : NSObject <CLLocationManagerDelegate, NSFetchedResultsControllerDelegate, WAUpgradeCallback, CSSearchableIndexDelegate, WAMediaUploadOperationDelegate> {
	NSOperationQueue* _mediaUploadQueue;
	WATask* _indexMessagesTask;
	WATask* _deleteMessagesTask;
	WATask* _extractWebURLsTask;
	WATask* _indexChatSessionsByCoreSpotlightTask;
	NSManagedObjectModel* _managedObjectModel;
	NSPersistentStoreCoordinator* _persistentStoreCoordinator;
	NSManagedObjectContext* _parentMOC;
	NSManagedObjectContext* _managedObjectContext;
	unsigned _saveMOCCounter;
	BOOL _processingMessages;
	NSCondition* _processMessagesCondition;
	NSMutableArray* _insertedChats;
	NSMutableArray* _deletedChats;
	NSMutableArray* _updatedChats;
	NSFetchedResultsController* _allChatsResultsController;
	WASearchEngine* _searchEngine;
	NSObject<OS_dispatch_group>* _searchEngineDispatchGroup;
	WAMessageSpotlightIndexer* _messageSpotlightIndexer;
	WAChatSessionSpotlightIndexer* _chatSessionSpotlightIndexer;
	BOOL _needsToIndexMessagesForSearch;
	BOOL _needsToSpotlightIndexChatSessionsForSearch;
	NSMutableDictionary* _activeDownloadIdentifiers;
	NSObject<OS_dispatch_queue>* _backgroundFetchingQueue;
	NSObject<OS_dispatch_queue>* _chatStoreQueue;
	BOOL _groupLocationRequested;
	id<WAChatStorageDelegate> _delegate;
	NSPersistentStore* _chatStore;
	WABlockedContactsList* _blockedContactsList;
	NSMutableArray* _mediaAutodownloadRetryArray;
	NSMutableArray* _URLSessionTasksToProcessOnCreateMOC;
	CLLocationManager* _locationManager;
	CLLocation* _bestLocation;
	NSMutableSet* _locationQueue;
	CLLocation* _lastReportedLocation;
	unsigned _locationSharingBackgroundTask;
}
@property(assign, nonatomic) unsigned locationSharingBackgroundTask;
@property(retain, nonatomic) CLLocation* lastReportedLocation;
@property(assign, nonatomic) BOOL groupLocationRequested;
@property(retain, nonatomic) NSMutableSet* locationQueue;
@property(retain, nonatomic) CLLocation* bestLocation;
@property(retain, nonatomic) CLLocationManager* locationManager;
@property(retain, nonatomic) NSMutableArray* URLSessionTasksToProcessOnCreateMOC;
@property(retain, nonatomic) NSMutableArray* mediaAutodownloadRetryArray;
@property(readonly, assign, nonatomic) NSOperationQueue* mediaUploadQueue;
@property(readonly, assign, nonatomic) WAChatSessionSpotlightIndexer* chatSessionSpotlightIndexer;
@property(readonly, assign, nonatomic) WASearchEngine* searchEngine;
@property(readonly, assign, nonatomic) WABlockedContactsList* blockedContactsList;
@property(readonly, assign, nonatomic) NSPersistentStore* chatStore;
@property(retain, nonatomic) id<WAChatStorageDelegate> delegate;
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(readonly, assign, nonatomic) unsigned databaseStatus;
@property(readonly, assign, nonatomic) NSURL* preMigrationChatDatabaseFileURL;
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(readonly, assign, nonatomic) unsigned archivedChatSessionsCount;
@property(readonly, assign, nonatomic) BOOL hasUnarchivedChatSessions;
@property(readonly, assign, nonatomic) BOOL hasArchivedChatSessions;
@property(readonly, assign, nonatomic) BOOL hasChatMessages;
+(id)errorWithDescription:(id)description failureReason:(id)reason;
+(void)wa_didUpgradeFrom:(id)from to:(id)to;
-(void).cxx_destruct;
-(id)existingChatSessionForJID:(id)jid;
-(id)allMemberJIDsInBroadcastList:(id)broadcastList;
-(id)sortedBroadcastLists;
-(id)blockedJIDs;
-(unsigned)countAllImageMessages;
-(unsigned)countAllExistingDownloadedMediaMessagesOfType:(unsigned)type forJID:(id)jid;
-(unsigned)countAllDownloadedMediaMessagesOfType:(unsigned)type;
-(unsigned)countAllTextMessages;
-(unsigned)countAllMessagesOfType:(unsigned)type forJID:(id)jid;
-(unsigned)countAllMessagesOfType:(unsigned)type;
-(unsigned)countEntitiesOfType:(Class)type withPredicateFormat:(id)predicateFormat;
-(id)profilePictureItemForJID:(id)jid inContext:(id)context;
-(id)profilePictureItemForJID:(id)jid;
-(id)chatSessionForJID:(id)jid inContext:(id)context;
-(id)chatSessionForJID:(id)jid;
-(id)allGroupChatSessions;
-(id)allChatSessionsWithPrefetchedRelationships:(id)prefetchedRelationships includeBroadcastLists:(BOOL)lists;
-(id)newManagedObjectContext;
-(id)managedObjectContext;
-(void)dropStoreWhenPossibleWithCompletionHandler:(id)completionHandler;
-(void)sendChatStorageDidLoadDatabaseNotification;
-(BOOL)loadPersistentStore;
-(void)loadStoreWhenPossibleWithCompletionHandler:(id)completionHandler thatShouldRunOnMainThread:(BOOL)that;
-(void)loadStoreWhenPossibleWithCompletionHandler:(id)completionHandler;
-(void)loadStoreNowWithCompletionHandler:(id)completionHandler;
-(id)persistentStoreURL;
-(id)persistentStorePath;
-(void)dealloc;
-(id)init;
-(id)outgoingMessageWithSharedItem:(id)sharedItem;
-(id)outgoingMessagesInSharedItemOutbox:(id)sharedItemOutbox;
-(unsigned)countOfMessages;
-(id)tarFilePathsOfTypes:(id)types shouldCancel:(id)cancel;
-(id)thumbnailFilePathsShouldCancel:(id)thumbnailFilePaths;
-(id)filePathsForProperties:(id)properties ofTypes:(id)types shouldCancel:(id)cancel;
-(id)estimatedVideoUploadSize;
-(void)calculatePotentialBackupSize:(XXStruct_krKngD*)size;
-(long long)calculateThumbnailTARExpectedSizeForSmallItemCount:(unsigned)smallItemCount largeItemCount:(unsigned)count;
-(long long)calculateVideoTARExpectedSizeWithItemCount:(unsigned)itemCount;
-(long long)calculateMediaTARExpectedSizeWithItemCount:(unsigned)itemCount;
-(long long)calculateStandardTarSizeForCount:(unsigned)count;
-(void)calculateDatabaseSizes:(XXStruct_IjzfkD*)sizes;
-(long long)sizeForMediaOfType:(unsigned)type forJID:(id)jid;
-(long long)sizeForMediaOfType:(unsigned)type;
-(void)finishProcessingRemainingMessages;
-(void)saveBlockedJIDs:(id)jids;
-(void)locationManager:(id)manager didFailWithError:(id)error;
-(void)locationManager:(id)manager didUpdateToLocation:(id)location fromLocation:(id)location3;
-(void)useBestLocationResult:(id)result;
-(void)stopLocationManagerIfPossible;
-(void)startLocationManagerIfNecessary;
-(void)locationUpdatesRequestExpired;
-(void)stopGroupLocationSharing;
-(void)startGroupLocationSharingForDuration:(double)duration;
-(void)locationRequestFailedWithError:(id)error userInfo:(id)info;
-(void)locationRequestFinishedWithLocation:(id)location userInfo:(id)info;
-(void)requestLocationWithCallbackDictionary:(id)callbackDictionary;
-(void)requestLocationForMessage:(id)message;
-(void)resendPendingReceipts;
-(void)debug_deleteAllOrphanedMessagesNow;
-(id)replaceChatSessionWithEmptySession:(id)emptySession;
-(void)didBulkDeleteMessagesInChatSession:(id)chatSession beforeDate:(id)date includingStarredMessages:(BOOL)messages fromWebClient:(BOOL)webClient;
-(void)deleteMessages:(id)messages inChatSession:(id)chatSession fromWebClient:(BOOL)webClient;
-(void)deleteAllMessagesInSession:(id)session;
-(void)clearAllChatSessions;
-(void)deleteAllChatSessions;
-(void)deleteChatSession:(id)session fromWebClient:(BOOL)webClient;
-(void)deleteChatSession:(id)session;
-(id)receivedMessagesWithStanzaID:(id)stanzaID;
-(id)receivedVoiceMessagesWithStanzaID:(id)stanzaID;
-(void)reportFieldStatsForSentMessage:(id)sentMessage sentSuccess:(BOOL)success;
-(void)changeStatus:(unsigned)status forOutgoingMessages:(id)outgoingMessages fromJID:(id)jid participantJID:(id)jid4 userData:(id)data playSound:(out BOOL*)sound;
-(void)changeStatus:(unsigned)status forOutgoingMessagesWithStanzaIDs:(id)stanzaIDs fromJID:(id)jid participantJID:(id)jid4 userData:(id)data playSound:(out BOOL*)sound;
-(void)changeStatus:(unsigned)status forIncomingMessageWithStanzaID:(id)stanzaID fromJID:(id)jid participantJID:(id)jid4;
-(void)storeModifiedMessage:(id)message notify:(BOOL)notify;
-(void)updateChatSessionWithMessage:(id)message;
-(void)sendVCard:(id)card inChatSession:(id)chatSession;
-(void)sendPlace:(id)place inChatSession:(id)chatSession completion:(id)completion;
-(void)sendMessageWithMedia:(id)media;
-(id)messageWithAudioFilePath:(id)audioFilePath inChatSession:(id)chatSession origin:(unsigned)origin durationSeconds:(int)seconds doNotUpload:(BOOL)upload streaming:(BOOL)streaming streamingHash:(id)hash mediaKey:(id)key error:(out id*)error;
-(void)sendAudioTrack:(id)track inChatSession:(id)chatSession completion:(id)completion;
-(void)sendDocumentAttachment:(id)attachment inChatSession:(id)chatSession completion:(id)completion;
-(void)sendVideoAtURL:(id)url caption:(id)caption collectionID:(id)anId index:(int)index count:(int)count inChatSession:(id)chatSession completion:(id)completion;
-(void)sendMessageWithImage:(id)image caption:(id)caption collectionID:(id)anId index:(int)index count:(int)count inChatSession:(id)chatSession completion:(id)completion;
-(void)sendMessageWithImage:(id)image caption:(id)caption inChatSession:(id)chatSession completion:(id)completion;
-(id)sendMessageWithText:(id)text metadata:(id)metadata inChatSession:(id)chatSession;
-(BOOL)isChatSessionForExistingUser:(id)existingUser;
-(void)forwardMessages:(id)messages toChatSession:(id)chatSession;
-(void)retrySendingMessage:(id)message;
-(void)sendMessage:(id)message notify:(BOOL)notify;
-(void)resendAllServerErrorReceiptsWithoutAck;
-(void)receivedServerErrorForStanzaIDs:(id)stanzaIDs fromJID:(id)jid participantJID:(id)jid3;
-(void)receivedServerErrorAckForStanzaID:(id)stanzaID fromJID:(id)jid participantJID:(id)jid3;
-(id)sentMessagesWithStanzaIDs:(id)stanzaIDs jid:(id)jid;
-(id)sentMessagesWithStanzaID:(id)stanzaID jid:(id)jid;
-(void)receiveError:(id)error forMessage:(id)message;
-(id)groupMembersWithJIDs:(id)jids;
-(BOOL)findContactInContext:(id)context forChatSession:(id)chatSession;
-(void)updateChatSessionWithContactData:(id)contactData;
-(void)receiveChatMessages:(id)messages completion:(id)completion;
-(void)addMessage:(id)message fromGroupMember:(id)groupMember toChatSession:(id)chatSession completion:(id)completion;
-(id)outgoingMessageTemplateForSession:(id)session withMedia:(BOOL)media;
-(id)messageWithMessageStanza:(id)messageStanza;
-(void)setChatSession:(id)session archived:(BOOL)archived notifyWebClient:(BOOL)client saveChanges:(BOOL)changes;
-(void)setChatSession:(id)session archived:(BOOL)archived;
-(void)setAllChatSessionsArchived:(BOOL)archived;
-(id)createChatSessionForContact:(id)contact JID:(id)jid eligibleForDeletionIfEmpty:(BOOL)deletionIfEmpty;
-(id)createChatSessionForContact:(id)contact JID:(id)jid;
-(id)createChatSessionForContact:(id)contact JID:(id)jid eligibleForDeletionIfEmpty:(BOOL)deletionIfEmpty hidden:(BOOL)hidden;
-(id)newChatSessionWithJID:(id)jid;
-(id)newOrExistingChatSessionForJID:(id)jid;
-(id)refetchAllMessages:(id)messages;
-(id)messageWithStanzaID:(id)stanzaID isFromMe:(BOOL)me inChatSession:(id)chatSession;
-(id)messageWithStanzaID:(id)stanzaID isFromMe:(BOOL)me inChatSessionWithJID:(id)jid;
-(id)messageWithID:(id)anId inContext:(id)context;
-(id)messageWithID:(id)anId;
-(id)receivedMessagesWithStanzaIDs:(id)stanzaIDs;
-(unsigned)countOfMessagesAfterMessage:(id)messagesAfterMessage;
-(id)unreadMessagesForSession:(id)session startOffset:(unsigned)offset;
-(id)messagesForSession:(id)session startOffset:(unsigned)offset limit:(unsigned)limit;
-(int)compareNumberOfMessagesInChatSession:(id)chatSession withNumber:(unsigned)number;
-(BOOL)chatSessionsWithJIDsContainMessages:(id)jidsContainMessages;
-(id)existingChatSessionsForJIDs:(id)jids prefetchingLastMessage:(BOOL)message;
-(id)existingChatSessionsForContact:(id)contact includeLinkedContacts:(BOOL)contacts;
-(id)chatSessionWithObjectID:(id)objectID;
-(id)chatSessionsForContactsUpdateInContext:(id)context;
-(void)xmppConnectionStateDidChange:(id)xmppConnectionState;
-(void)mediaDownloadPolicyDidChange:(id)mediaDownloadPolicy;
-(void)didReceiveMemoryWarning:(id)warning;
-(void)applicationWillEnterForeground:(id)application;
-(void)reportChatsFieldStatsIfNeeded;
-(void)controllerDidChangeContent:(id)controller;
-(void)controller:(id)controller didChangeObject:(id)object atIndexPath:(id)indexPath forChangeType:(unsigned)changeType newIndexPath:(id)path;
-(void)controllerWillChangeContent:(id)controller;
-(void)setUpFetchedResultsControllers;
-(void)markAsCorrupted;
-(void)changeAfterRestore;
-(void)removeGroupPictureIDs;
-(void)setMetadata:(id)metadata forKey:(id)key;
-(id)metadataForKey:(id)key;
-(void)deleteStorage;
-(void)workerMOCDidSave:(id)workerMOC;
-(void)saveContextAndMergeChanges:(id)changes completion:(id)completion;
-(void)delayedSave;
-(void)checkMOCForObjectsWithTemporaryIDs:(id)temporaryIDs;
-(void)saveMainMOCOnly;
-(void)saveMainMOCPendingFullSave;
-(void)internalSaveWithCompletionHandler:(id)completionHandler;
-(void)saveWithCompletionHandler:(id)completionHandler;
-(void)saveAndWaitUntilDone:(BOOL)done;
-(void)save;
-(BOOL)contextContainsSpotlightUnindexedChatSessions:(id)sessions;
-(id)saveNonMainManagedObjectContext:(id)context;
-(BOOL)contextContainsUnindexedMessages:(id)messages;
-(void)setUpRecurringTasksIfNeeded;
-(void)performAfterMOCCreated;
-(void)performAfterStoreDrop;
-(void)performBeforeStoreDrop;
-(void)performAfterStoreAdd;
-(void)performBeforeStoreAdd;
-(void)performAfterInit;
-(void)reportSearchIndexStatsIfNeededWithLastIndexedMessagesCount:(int)lastIndexedMessagesCount completion:(id)completion;
-(BOOL)removeDocIDColumnUsingLightweightMigration;
-(BOOL)removeDocIDColumnUsingBatchUpdate;
-(void)removeSearchIndex;
-(BOOL)hasSufficientFreeDiskSpaceForSearchIndexing;
-(void)searchChatSessionsMatchingText:(id)text completion:(id)completion;
-(void)searchMessagesMatchingText:(id)text chatSessionJIDs:(id)jids starredOnly:(BOOL)only type:(int)type offset:(unsigned)offset limit:(unsigned)limit completion:(id)completion;
-(void)searchableIndex:(id)index reindexSearchableItemsWithIdentifiers:(id)identifiers acknowledgementHandler:(id)handler;
-(void)searchableIndex:(id)index reindexAllSearchableItemsWithAcknowledgementHandler:(id)acknowledgementHandler;
-(void)resetChatSessionCoreSpotlightIndex;
-(void)resetChatSessionCoreSpotlightIndexStatusWithCompletion:(id)completion;
-(void)setUpSpotlightIndexer;
-(id)lastIncomingMessagesInChatSession:(id)chatSession;
-(void)reallyRelayOutgoingMessage:(id)message fromStanza:(id)stanza;
-(void)relayOutgoingMessageStanza:(id)stanza;
-(id)allOutgoingMessagesAndPTTInChatSessionIncludingAndAfterMessage:(id)chatSessionIncludingAndAfterMessage;
-(id)allRecentlyRelevantMessagesInChats;
-(id)allChatSessions;
-(id)messagesInChatSession:(id)chatSession afterMessage:(id)message count:(unsigned)count;
-(id)messagesInChatSession:(id)chatSession beforeStanzaID:(id)anId isFromMe:(BOOL)me participant:(id)participant count:(unsigned)count;
-(id)messagesWithMessageIDs:(id)messageIDs inChatSession:(id)chatSession;
-(id)messageWithStanzaID:(id)stanzaID participant:(id)participant isFromMe:(BOOL)me inChatSession:(id)chatSession;
-(id)messageWithStanzaID:(id)stanzaID participant:(id)participant isFromMe:(BOOL)me inChatSessionWithJID:(id)jid;
-(void)resetSearchStatusOfMessagesSatisfyingPredicate:(id)messagesSatisfyingPredicate inContext:(id)context;
-(void)reportMigrationTimeFieldStatsWithDuration:(double)duration databaseSize:(long long)size;
-(void)migrateChatDatabaseWithCompletionHandler:(id)completionHandler;
-(void)migrateProfilePictureItemInChatContext:(id)chatContext contactsContext:(id)context;
-(BOOL)addMediaSectionIDToAllMessagesInContext:(id)context;
-(id)validMessageObjectIDsInMediaItems:(id)mediaItems context:(id)context;
-(void)migrateChatNotificationSettingsInContext:(id)context;
-(void)migrateGroupAdminAndCreatorInContext:(id)context;
-(void)migrateChatSessionPropertiesInContext:(id)context;
-(void)migrateGroupMemberPropertiesInContext:(id)context;
-(void)deleteAllMedia;
-(void)mediaUploadOperation:(id)operation uploadProgressChanged:(float)changed;
-(void)mediaUploadOperation:(id)operation didFailWithError:(id)error;
-(void)mediaUploadOperationDidFinish:(id)mediaUploadOperation;
-(void)didFinishDownloadingMediaInMessage:(id)message ackRef:(id)ref toPath:(id)path usingLocalCopy:(BOOL)copy;
-(void)didFailToDownloadMediaInMessage:(id)message autodownload:(BOOL)autodownload error:(id)error;
-(void)URLSessionManagerDidFinishDownloadTask:(id)urlsessionManager;
-(void)URLSessionManagerDidUpdateTaskProgress:(id)urlsessionManager;
-(void)URLSessionManagerDidChangeState:(id)urlsessionManager;
-(void)handleCompletedURLSessionDownloadTask:(id)task;
-(id)messagesWithDownloadIdentifiers:(id)downloadIdentifiers;
-(id)messageWithDownloadIdentifier:(id)downloadIdentifier;
-(void)cancelAllDownloads;
-(void)cancelAllUploads;
-(void)cancelMediaDownloadForMessage:(id)message;
-(void)queueMediaDownloadForMessage:(id)message autodownload:(BOOL)autodownload;
-(void)retryMediaDownloadForMessage:(id)message;
-(void)processPendingAutodownloads;
-(void)checkMessagesForMediaAutodownload;
-(void)cancelFileUploadForMessage:(id)message;
-(void)startMediaUploadForMessage:(id)message;
-(void)reuploadMediaInMessage:(id)message completion:(id)completion;
-(id)streamingUploadingOperationForMediaAtPath:(id)path encrypt:(BOOL)encrypt;
-(void)abortMediaUploadDownloadOperationForMessage:(id)message;
-(void)fetchLocationMessagesInChatSession:(id)chatSession afterDate:(id)date completion:(id)completion;
-(unsigned)countSentMedia;
-(id)libraryPathToMediaItemWithHash:(id)hash returningSize:(CGSize*)size;
-(id)starredMessagesInChatSessionsWithJIDs:(id)jids startOffset:(unsigned)offset limit:(unsigned)limit;
-(void)markMessages:(id)messages asStarred:(BOOL)starred notifyWebClient:(BOOL)client;
-(void)addGroupPictureChangeEventToWAChatSession:(id)wachatSession authorJID:(id)jid timestamp:(id)timestamp;
-(void)addGroupPictureDeleteEventToWAChatSession:(id)wachatSession authorJID:(id)jid timestamp:(id)timestamp;
-(void)requestAndMergeAllListsFromServerWithCompletionHandler:(id)completionHandler;
-(id)insertListIfNeeded:(id)needed inContext:(id)context;
-(void)removeGroupMember:(id)member fromList:(id)list createGroupEvent:(BOOL)event;
-(BOOL)addGroupMemberWithInfo:(id)info toList:(id)list createGroupEvent:(BOOL)event;
-(void)requestListsIfNeeded;
-(void)addInitialGroupEventToNewList:(id)newList;
-(id)createMessageTemplateForGroupEventInList:(id)list;
-(id)createNewList;
-(id)assignNewBroadcastJID;
-(void)demoteParticipantsWithJIDs:(id)jids inChatSession:(id)chatSession notification:(id)notification;
-(void)promoteParticipantsWithJIDs:(id)jids inChatSession:(id)chatSession notification:(id)notification;
-(void)requestPromotionOfMemberWithJID:(id)jid inGroupWithJID:(id)jid2 webClientRequestID:(id)anId completion:(id)completion;
-(void)modifyParticipantInChatSession:(id)chatSession oldJID:(id)jid newJID:(id)jid3 timestamp:(id)timestamp;
-(void)removeWAGroupMember:(id)member fromChatSession:(id)chatSession syncDelete:(BOOL)aDelete groupNotification:(id)notification;
-(void)removeParticipantsWithJIDs:(id)jids fromChatSession:(id)chatSession groupNotification:(id)notification;
-(void)requestRemovalOfMemberJIDs:(id)memberJIDs fromGroupWithJID:(id)jid webClientRequestID:(id)anId completion:(id)completion;
-(void)requestAdditionOfMemberJIDs:(id)memberJIDs contacts:(id)contacts toGroupWithJID:(id)jid webClientRequestID:(id)anId completion:(id)completion;
-(id)addParticipantWithJID:(id)jid waContact:(id)contact toChatSession:(id)chatSession addMessage:(BOOL)message groupNotification:(id)notification;
-(id)lastPushNameForGroupMember:(id)groupMember inContext:(id)context;
-(void)requestParticipatingGroups:(BOOL)groups withCompletion:(id)completion;
-(void)requestInfoForGroupWithJID:(id)jid;
-(void)requestSubjectChangeForGroupWithJID:(id)jid to:(id)to webClientRequestID:(id)anId completion:(id)completion;
-(void)changeSubject:(id)subject forChatSession:(id)chatSession groupNotification:(id)notification;
-(void)endGroupWithWAChatSession:(id)wachatSession participantUnknown:(BOOL)unknown groupNotification:(id)notification;
-(void)setLockedState:(BOOL)state forChatSession:(id)chatSession groupNotification:(id)notification;
-(void)requestGroupEndForWAChatSession:(id)wachatSession;
-(void)requestToLeaveGroupWithJID:(id)jid webClientRequestID:(id)anId completion:(id)completion;
-(void)requestGroupCreateForChatSession:(id)chatSession webClientRequestID:(id)anId completion:(id)completion;
-(void)retryGroupCreateForChatSession:(id)chatSession;
-(void)finishCreationOfGroupWithTempJID:(id)tempJID usingXMPPGroup:(id)group;
-(id)createChatSessionForContacts:(id)contacts subject:(id)subject picture:(id)picture webClientRequestID:(id)anId completion:(id)completion;
-(id)createChatSessionForContactJIDs:(id)contactJIDs subject:(id)subject picture:(id)picture webClientRequestID:(id)anId completion:(id)completion;
-(id)createChatSessionWithSubject:(id)subject groupJID:(id)jid groupNotification:(id)notification;
-(void)createOrUpdateChatSession:(id)session withXMPPGroup:(id)xmppgroup groupNotification:(id)notification;
-(BOOL)isJID:(id)jid participantInGroupWithJID:(id)jid2;
-(BOOL)hasGroupChatSessions;
@end

