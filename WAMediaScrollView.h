/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "WAMediaPlayerDelegate.h"
#import "UIScrollViewDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import <UIKit/UIScrollView.h>
#import "WhatsApp-Structs.h"
#import "WAMediaPlayerTransportControlViewDelegate.h"

@class NSString, UIImageView, WAMediaPlayer, UILongPressGestureRecognizer, UIView, WAMessage, UITapGestureRecognizer, WAMediaPlayerTransportControlView;
@protocol WAMediaScrollViewDelegate;

__attribute__((visibility("hidden")))
@interface WAMediaScrollView : UIScrollView <WAMediaPlayerTransportControlViewDelegate, UIGestureRecognizerDelegate, UIScrollViewDelegate, WAMediaPlayerDelegate> {
	UIImageView* _imageView;
	float _fillToScreenScale;
	UIImageView* _audioOnlyBackgroundImageView;
	UIImageView* _audioOnlyLogoImageView;
	WAMessage* _currentMediaMessage;
	BOOL _showNextPlaybackError;
	WAMediaPlayerTransportControlView* _playerTransportBar;
	UILongPressGestureRecognizer* _longPressGesture;
	UITapGestureRecognizer* _doubleTapGesture;
	BOOL _needsScrollViewZoomAdjustment;
	BOOL _mediaControlsHidden;
	BOOL _suppressLayout;
	id<WAMediaScrollViewDelegate> _mediaDelegate;
	unsigned _index;
	float _topLayoutEdge;
	float _offset;
	WAMediaPlayer* _mediaPlayer;
	float _initialZoomScale;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(assign, nonatomic) BOOL suppressLayout;
@property(readonly, assign, nonatomic) float initialZoomScale;
@property(readonly, assign, nonatomic) UIView* contentView;
@property(readonly, assign, nonatomic) BOOL isLongPressing;
@property(readonly, assign, nonatomic, getter=isPlayable) BOOL playable;
@property(readonly, assign, nonatomic) WAMediaPlayer* mediaPlayer;
@property(assign, nonatomic) BOOL mediaControlsHidden;
@property(assign, nonatomic) float offset;
@property(assign, nonatomic) float topLayoutEdge;
@property(assign, nonatomic) unsigned index;
@property(assign, nonatomic) __weak id<WAMediaScrollViewDelegate> mediaDelegate;
-(void).cxx_destruct;
-(void)mediaPlayerTransportControlViewDidChangeCurrentTime:(id)mediaPlayerTransportControlView;
-(void)mediaPlayerTransportControlViewDidEndScrubbing:(id)mediaPlayerTransportControlView;
-(void)mediaPlayerTransportControlViewDidBeginScrubbing:(id)mediaPlayerTransportControlView;
-(void)mediaPlayerDidEndScrubbing:(id)mediaPlayer;
-(void)mediaPlayerDidBeginScrubbing:(id)mediaPlayer;
-(void)mediaPlayerDidPlayToEndTime:(id)mediaPlayer;
-(void)mediaPlayerDidFinishLoading:(id)mediaPlayer;
-(void)mediaPlayerDidChangeCurrentTime:(id)mediaPlayer;
-(void)mediaPlayerStatusDidChange:(id)mediaPlayerStatus;
-(void)handlePlaybackError;
-(void)tryToShowPlaybackError;
-(void)displayMediaInMessage:(id)message;
-(id)accessibilityLabelWithMediaType:(CFStringRef)mediaType size:(CGSize)size date:(id)date;
-(void)mediaPlayerDidRequestPlaybackStart:(id)mediaPlayer;
-(void)pause;
-(void)playInitiatedByAutoPlay:(BOOL)play;
-(void)displayQTLogo;
-(void)scrollViewWillBeginDragging:(id)scrollView;
-(void)scrollViewDidEndZooming:(id)scrollView withView:(id)view atScale:(float)scale;
-(void)scrollViewWillBeginZooming:(id)scrollView withView:(id)view;
-(void)scrollViewDidZoom:(id)scrollView;
-(id)viewForZoomingInScrollView:(id)scrollView;
-(void)scrollViewDidScroll:(id)scrollView;
-(void)handleLongPress:(id)press;
-(void)handleDoubleTap:(id)tap;
-(void)handleSingleTap:(id)tap;
-(void)showPopupMenuAtPoint:(CGPoint)point;
-(void)copy:(id)copy;
-(BOOL)canBecomeFirstResponder;
-(BOOL)canPerformAction:(SEL)action withSender:(id)sender;
-(void)configureZooming;
-(CGRect)zoomRectForScale:(float)scale withCenter:(CGPoint)center;
-(void)relayoutAlongsideLayerAnimation;
-(void)toggleZoomInOutAtPoint:(CGPoint)point;
-(void)setMediaControlsHidden:(BOOL)hidden animationDuration:(double)duration;
-(void)animateOutImageView:(id)view completion:(id)completion;
-(void)animateDeletionWithCompletionHandler:(id)completionHandler;
-(void)prepareForReuse;
-(void)layoutSubviews;
-(BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;
-(void)setFrame:(CGRect)frame;
-(void)setBounds:(CGRect)bounds;
-(void)dealloc;
-(id)initWithFrame:(CGRect)frame;
@end

