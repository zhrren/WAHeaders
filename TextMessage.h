/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "WhatsApp-Structs.h"
#import </libobjc.A.h>

@class UIFont, NSString, NSSet, NSArray, UIColor;

__attribute__((visibility("hidden")))
@interface TextMessage : NSObject {
	BOOL _dataDetectionEnabled;
	BOOL _underlineLinks;
	BOOL _RTLText;
	UIFont* _font;
	UIColor* _textColor;
	UIColor* _urlColor;
	UIColor* _highlightedUrlColor;
	UIColor* _urlBackgroundColor;
	int _alignment;
	UIColor* _shadowColor;
	NSArray* _textBlocks;
	NSSet* _highlightedTerms;
	UIColor* _highlightBoxColor;
	NSString* _text;
	NSArray* _highlightedTextBlocks;
	CGSize _shadowOffset;
	CGSize _size;
	CGPoint _displayOrigin;
}
@property(retain, nonatomic) NSArray* highlightedTextBlocks;
@property(copy, nonatomic) NSString* text;
@property(readonly, assign, nonatomic) CGPoint displayOrigin;
@property(assign, nonatomic, getter=isRTLText) BOOL RTLText;
@property(retain, nonatomic) UIColor* highlightBoxColor;
@property(copy, nonatomic) NSSet* highlightedTerms;
@property(assign, nonatomic) CGSize size;
@property(retain, nonatomic) NSArray* textBlocks;
@property(assign, nonatomic) CGSize shadowOffset;
@property(retain, nonatomic) UIColor* shadowColor;
@property(assign, nonatomic) int alignment;
@property(retain, nonatomic) UIColor* urlBackgroundColor;
@property(retain, nonatomic) UIColor* highlightedUrlColor;
@property(retain, nonatomic) UIColor* urlColor;
@property(retain, nonatomic) UIColor* textColor;
@property(retain, nonatomic) UIFont* font;
@property(assign, nonatomic) BOOL underlineLinks;
@property(assign, nonatomic) BOOL dataDetectionEnabled;
+(id)matchesInString:(id)string;
+(BOOL)isStringSafe:(id)safe;
+(id)textBlocksInText:(id)text withDataDetectionEnabled:(BOOL)dataDetectionEnabled;
+(id)textMessageWithText:(id)text;
+(void)initialize;
-(void).cxx_destruct;
-(void)setNeedsRedraw;
-(void)createTextBlocksForHighlightedTermsIfNeeded;
-(void)updateAttributesForTextBlock:(id)textBlock;
-(void)drawInRect:(CGRect)rect context:(CGContextRef)context lastLineRect:(CGRect*)rect3;
-(CGRect)boundingRectWithSize:(CGSize)size lastLineRect:(CGRect*)rect;
-(void)enableDataDetection:(BOOL)detection;
-(id)hitTest:(CGPoint)test withPadding:(float)padding;
-(BOOL)isWord:(id)word foundInHighlightedTerms:(id)highlightedTerms;
-(void)loadTextBlocksIfNecessary;
-(void)enableDataDetection:(BOOL)detection onQueue:(id)queue withCompletionHandler:(id)completionHandler;
-(id)initWithText:(id)text;
-(id)init;
@end

