/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "WhatsApp-Structs.h"
#import <UIKit/UIView.h>

@class AVPlayerItem, AVPlayer, AVVideoComposition, WACropAwareImageView, WAMediaPlayerPlayButtonView, _WAPlayerView, NSError, NSObject, UIImage;
@protocol OS_dispatch_group, WAMediaPlayerDelegate;

__attribute__((visibility("hidden")))
@interface WAMediaPlayer : UIView {
	AVPlayer* _player;
	_WAPlayerView* _playerView;
	id _timeObserver;
	float _playerRateBeforeScrubbing;
	XXStruct_pwHToB _desiredSeekTime;
	WAMediaPlayerPlayButtonView* _playButtonView;
	CGRect _frameForPlayButtonSnapshot;
	BOOL _showPlayButtonOnReady;
	id _playbackActivity;
	BOOL _playButtonNormallyVisible;
	NSObject<OS_dispatch_group>* _seekDispatchGroup;
	BOOL _seekInProgress;
	BOOL _alwaysShowPlayButtonOnPause;
	BOOL _suppressPlayButton;
	BOOL _scrubbingInProgress;
	unsigned _status;
	id<WAMediaPlayerDelegate> _delegate;
	float _playbackRate;
	NSError* _error;
	WACropAwareImageView* _posterImageView;
	AVPlayerItem* _playerItem;
	XXStruct_pwHToB _playbackStartTime;
}
@property(readonly, assign, nonatomic) BOOL scrubbingInProgress;
@property(readonly, assign, nonatomic) XXStruct_pwHToB duration;
@property(readonly, assign, nonatomic) XXStruct_pwHToB currentTime;
@property(readonly, assign, nonatomic) CGSize presentationSize;
@property(assign, nonatomic) BOOL suppressPlayButton;
@property(assign, nonatomic) BOOL alwaysShowPlayButtonOnPause;
@property(assign, nonatomic) XXStruct_pwHToB playbackStartTime;
@property(retain, nonatomic) AVVideoComposition* playerItemVideoComposition;
@property(retain, nonatomic) AVPlayerItem* playerItem;
@property(readonly, assign, nonatomic) WACropAwareImageView* posterImageView;
@property(retain, nonatomic) UIImage* posterImage;
@property(readonly, assign, nonatomic) NSError* error;
@property(readonly, assign, nonatomic) BOOL seekInProgress;
@property(readonly, assign, nonatomic, getter=isReadyToPlay) BOOL readyToPlay;
@property(readonly, assign, nonatomic, getter=isPlaying) BOOL playing;
@property(assign, nonatomic) float playbackRate;
@property(assign, nonatomic) __weak id<WAMediaPlayerDelegate> delegate;
@property(assign, nonatomic) unsigned status;
-(void).cxx_destruct;
-(id)snapshotImage;
-(void)performBlockAfterSeeking:(id)seeking;
-(void)seekToTime:(XXStruct_pwHToB)time tolerance:(XXStruct_pwHToB)tolerance completionHandler:(id)handler;
-(void)internalSeekWithTolerance:(XXStruct_pwHToB)tolerance;
-(void)seekToTime:(XXStruct_pwHToB)time tolerance:(XXStruct_pwHToB)tolerance;
-(void)seekToTime:(XXStruct_pwHToB)time;
-(void)endScrubbing;
-(void)beginScrubbing;
-(void)rewind;
-(BOOL)playInitiatedByAutoPlay:(BOOL)play;
-(void)pause;
-(void)updatePlayButtonAlphaWithAnimation:(BOOL)animation;
-(BOOL)isPlayButtonHidden;
-(void)applicationWillResignActive:(id)application;
-(void)playerItemDidPlayToEndTime:(id)playerItem;
-(void)playerItemDidBecomeReadyToPlay;
-(void)playerDidChangeCurrentTime;
-(void)removeTimeObserverFromPlayer;
-(void)addTimeObserverToPlayer;
-(void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void*)context;
-(void)playButtonTapped:(id)tapped;
-(void)setInitialPosterImage:(id)image;
-(id)hitTest:(CGPoint)test withEvent:(id)event;
-(void)layoutSubviews;
-(void)didMoveToWindow;
-(void)setAccessibilityValue:(id)value;
-(void)setAccessibilityLabel:(id)label;
-(BOOL)isAccessibilityElement;
-(void)dealloc;
-(id)initWithFrame:(CGRect)frame;
-(id)initWithContentURL:(id)contentURL;
-(id)initWithCoder:(id)coder;
@end

