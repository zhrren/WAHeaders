/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

#import "_ABAddressBookCopyArrayOfAllGroups.h"

#import "AVCaptureAudioDataOutputSampleBufferDelegate-Protocol.h"
#import "AVCaptureMetadataOutputObjectsDelegate-Protocol.h"
#import "AVCaptureVideoDataOutputSampleBufferDelegate-Protocol.h"
#import "WACameraPreviewViewDelegate-Protocol.h"

@class AVAssetWriter, AVAssetWriterInput, AVCaptureAudioDataOutput, AVCaptureDeviceInput, AVCaptureMetadataOutput, AVCaptureSession, AVCaptureStillImageOutput, AVCaptureVideoDataOutput, CIContext, NSMutableDictionary, NSObject<OS_dispatch_group>, NSObject<OS_dispatch_queue>, NSSet, WACameraPreviewView;

@interface WACameraController : _ABAddressBookCopyArrayOfAllGroups <AVCaptureVideoDataOutputSampleBufferDelegate, AVCaptureMetadataOutputObjectsDelegate, AVCaptureAudioDataOutputSampleBufferDelegate, WACameraPreviewViewDelegate>
{
    WACameraPreviewView *_previewView;
    NSObject<OS_dispatch_queue> *_captureQueue;
    NSObject<OS_dispatch_queue> *_audioCaptureQueue;
    NSObject<OS_dispatch_queue> *_videoCaptureQueue;
    NSObject<OS_dispatch_group> *_cameraConfigGroup;
    NSMutableDictionary *_faceObjects;
    BOOL _isChangingCamerasInteractively;
    double _lastAutoFocusOnFaceTime;
    BOOL _startSessionOnDidEnterForeground;
    id _defaultAudioActivity;
    id _videoRecordingAudioActivity;
    int _cameraState;
    AVCaptureSession *_captureSession;
    AVCaptureDeviceInput *_videoDeviceInput;
    AVCaptureDeviceInput *_audioDeviceInput;
    AVCaptureStillImageOutput *_stillImageOutput;
    AVCaptureVideoDataOutput *_videoDataOutput;
    AVCaptureAudioDataOutput *_audioDataOutput;
    AVCaptureMetadataOutput *_metadataOutput;
    AVAssetWriterInput *_audioWriterInput;
    AVAssetWriterInput *_videoWriterInput;
    struct opaqueCMFormatDescription *_audioFormatDescription;
    struct opaqueCMFormatDescription *_videoFormatDescription;
    CIContext *_ciContext;
    BOOL _lockExposureAfterAutoExposure;
    BOOL _needsReexposure;
    double _lastExposureLockTime;
    struct CGPoint _exposurePointOfInterest;
    struct opaqueCMBufferQueue *_previewBufferQueue;
    unsigned long long _exposureLockID;
    int _deviceOrientationForCapture;
    AVAssetWriter *_assetWriter;
    BOOL _isAssetWriterSessionStarted;
    BOOL _needsFinishAssetWriterSession;
    int _acceptSampleBuffersLock;
    BOOL _isAssetWriterAcceptingSampleBuffers;
    int _videoSampleTimeLock;
    CDAnonymousStruct1 _timeOfFirstAppendedVideoSampleBuffer;
    CDAnonymousStruct1 _timeOfLastAppendedVideoSampleBuffer;
    CDAnonymousStruct1 _maximumRecordingDuration;
    AVCaptureSession *_audioCaptureSession;
    struct {
        CDAnonymousStruct1 duration;
        CDAnonymousStruct1 presentationTimeStamp;
        CDAnonymousStruct1 decodeTimeStamp;
    } _sampleTimingInfo;
    BOOL _needsStartAssetWriterWhenAudioFormatDescriptionIsReady;
    int _startSessionCounter;
    BOOL _useBackCamera;
    BOOL _exposurePointOfInterestSupported;
    BOOL _focusPointOfInterestSupported;
    BOOL _flashActive;
    BOOL _running;
    id <WACameraControllerDelegate> _delegate;
    int _cameraMode;
    NSSet *_supportedFlashModes;
    int _flashMode;
    float _maximumZoomFactor;
    float _currentZoomFactor;
}

+ (int)imageOrientationForSourceVideoOrientation:(int)fp8 targetVideoOrientation:(int)fp12 backFacingCamera:(BOOL)fp16;
+ (int)numberOfRightAnglesForVideoOrientation:(int)fp8;
+ (int)frontCameraVideoOrientationForDeviceOrientation:(int)fp8;
+ (int)backCameraVideoOrientationForDeviceOrientation:(int)fp8;
+ (id)videoCaptureDeviceWithPreferredPosition:(int)fp8;
+ (BOOL)hasActiveInstances;
+ (void)recoverUnsavedMediaIfNeeded;
+ (id)temporaryMediaPathWithExtension:(id)fp8;
+ (id)cameraMediaDirectory;
+ (void)requestCameraPermissionWithCompletionHandler:(id)fp(null);
- (BOOL)isRunning;
- (float)currentZoomFactor;
- (float)maximumZoomFactor;
- (BOOL)isFlashActive;
- (int)flashMode;
- (id)supportedFlashModes;
- (BOOL)focusPointOfInterestSupported;
- (BOOL)exposurePointOfInterestSupported;
- (int)cameraMode;
- (BOOL)useBackCamera;
- (id)previewView;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (void)applicationDidReceiveMemoryWarning:(id)fp8;
- (void)applicationWillEnterForeground:(id)fp8;
- (void)handleCaptureSessionRuntimeError:(id)fp8;
- (void)mediaServicesWereReset:(id)fp8;
- (void)mediaServicesWereLost:(id)fp8;
- (void)captureDeviceSubjectAreaDidChange:(id)fp8;
- (void)setFilter:(id)fp8;
- (id)filter;
- (id)imageFromImageBuffer:(struct __CVBuffer *)fp8 imageOrientation:(int)fp12;
- (id)imageFromSampleBuffer:(struct opaqueCMSampleBuffer *)fp8;
- (void)drainBufferQueue:(struct opaqueCMBufferQueue *)fp8;
- (struct opaqueCMSampleBuffer *)dequeueAndRetainBestSampleBufferInQueue:(struct opaqueCMBufferQueue *)fp8 forPresentationTime:(CDAnonymousStruct1)fp12;
- (void)updatePreviewWithSampleBuffer:(struct opaqueCMSampleBuffer *)fp8;
- (void)captureOutput:(id)fp8 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)fp12 fromConnection:(id)fp16;
- (void)performAnimationWithDuration:(double)fp8 key:(id)fp16 callback:(id)fp(null) completion:(void)fp20;
- (void)blockCurrentThreadUntilDisplay;
- (id)redrawPreviewAndSnapshot;
- (void)cameraPreviewViewDidChangeImageSize:(id)fp8;
- (struct CGSize)previewImageSize;
- (void)setPreviewPaused:(BOOL)fp8;
- (BOOL)isPreviewPaused;
- (void)getZoomFactorWithCompletionBlock:(id)fp(null);
- (void)setZoomFactor:(float)fp8 completion:(id)fp(null);
- (float)maximumZoomFactorForCurrentSettings;
- (void)updatePointOfInterestWithFaceMetadata;
- (id)faceObjects;
- (id)faceObjectWithMetadataObject:(id)fp8 fromConnection:(id)fp12;
- (id)qrCodeObjectWithMetadataObject:(id)fp8;
- (void)captureOutput:(id)fp8 didOutputMetadataObjects:(id)fp12 fromConnection:(id)fp16;
- (void)setUpMetadataOutputForCameraMode:(int)fp8;
- (CDAnonymousStruct1)durationOfCurrentVideoRecording;
- (void)finishAssetWriterSession;
- (void)appendSampleBuffer:(struct opaqueCMSampleBuffer *)fp8 toWriterInput:(id)fp12;
- (void)cleanUpAfterRecording;
- (void)didFailToPrepareRecording;
- (void)startAssetWriterSession;
- (void)cancelVideoRecording;
- (void)stopVideoRecording;
- (CDAnonymousStruct1)preferredFrameRateForDevice:(id)fp8;
- (void)resetCaptureDeviceAfterVideoRecording:(id)fp8;
- (void)prepareCaptureDeviceForVideoRecording:(id)fp8;
- (BOOL)startVideoRecording;
- (BOOL)isRecordingVideo;
- (BOOL)readyForMediaCapture;
- (void)performStillImageCaptureAnimation;
- (void)captureImageWithCompletion:(id)fp(null);
- (void)exposeAtPoint:(struct CGPoint)fp8;
- (void)exposeAndFocusWithMode:(int)fp8 atDevicePoint:(struct CGPoint)fp12 monitorSubjectAreaChange:(BOOL)fp20;
- (void)unlockExposure;
- (void)lockExposure;
- (BOOL)isHoldingExposureLock;
- (void)setDeviceOrientation:(int)fp8;
- (void)resetPointOfInterest;
- (void)setPointOfInterest:(struct CGPoint)fp8;
- (id)supportedFlashModesForCurrentDevice;
- (void)internalSetFlashMode:(int)fp8;
- (void)setFlashMode:(int)fp8 completion:(id)fp(null);
- (void)internalSetCameraMode:(int)fp8;
- (void)setCameraMode:(int)fp8 fromQueue:(id)fp12 completion:(id)fp(null);
- (void)internalSetUseBackCamera:(BOOL)fp8 forCameraMode:(int)fp12;
- (void)handleAudioSessionRouteChangeNotification:(id)fp8;
- (void)setUpMicrophoneForCameraPosition:(BOOL)fp8;
- (void)setUseBackCamera:(BOOL)fp8 forCameraMode:(int)fp12 fromQueue:(id)fp16 completion:(id)fp(null);
- (void)setUseBackCamera:(BOOL)fp8 completion:(id)fp(null);
- (struct CGAffineTransform)previewTransform;
- (void)stopRunning;
- (void)startRunning;
- (void)dealloc;
- (id)initWithCameraMode:(int)fp8 useBackCamera:(BOOL)fp12;
- (id)init;

@end

