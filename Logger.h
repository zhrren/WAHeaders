/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import </libobjc.A.h>

@class NSString, NSDate, NSDateFormatter, WATask, NSFileHandle, NSPipe;
@protocol OS_dispatch_queue, OS_dispatch_io;

__attribute__((visibility("hidden")))
@interface Logger : NSObject {
	unsigned _counter;
	NSDateFormatter* _dateFormatter;
	NSFileHandle* _fileHandle;
	NSDate* _creationDate;
	NSString* _activeLogFilePath;
	NSString* _previousLogFilePath;
	NSObject<OS_dispatch_io>* _stdErrChannel;
	NSPipe* _stdErrPipe;
	int _level;
	NSObject<OS_dispatch_queue>* _logQueue;
	WATask* _removeLogsTask;
}
@property(retain, nonatomic) WATask* removeLogsTask;
@property(readonly, assign, nonatomic) NSObject<OS_dispatch_queue>* logQueue;
@property(assign, nonatomic) int level;
+(id)colorFormatStringForLevel:(int)level;
+(id)logLevelToString:(int)string;
+(id)header;
+(id)logFilePrefix;
+(id)sharedLogsDirectory;
+(id)mainLogsDirectory;
+(id)currentLogsDirectory;
+(id)sharedLogger;
-(void).cxx_destruct;
-(void)logRawString:(id)string;
-(id)allLogsContainingLoggingSinceDate:(id)date maxFileSize:(id)size;
-(id)compressedDataForLogURL:(id)logURL footnote:(id)footnote fileManager:(id)manager;
-(id)compressedDataForLogs:(id)logs;
-(void)fetchCompressedDataForLogRequestOnQueue:(id)logRequestOnQueue completion:(id)completion;
-(void)fetchCompressedDataFromActiveLog:(BOOL)activeLog footnote:(id)footnote queue:(id)queue completion:(id)completion;
-(void)logToConsole:(id)console;
-(void)waitUntilDone;
-(void)archiveLogsWithCompletionHandler:(id)completionHandler;
-(void)removeExpiredLogsInDirectory:(id)directory;
-(void)removeExpiredLogsWithCompletionHandler:(id)completionHandler;
-(void)scheduleRemoveExpiredLogsTask;
-(void)removeExpiredLogsAtNextOpportunity;
-(void)prepareOutputFileHandleStartingNewFileIfNeeded:(BOOL)needed;
-(void)write:(int)write format:(id)format;
-(void)writeLogFromStdErr:(id)stdErr;
-(id)logLineWithLevel:(int)level text:(id)text inColor:(BOOL)color;
-(id)logLineWithLevel:(int)level inColor:(BOOL)color format:(id)format;
-(void)enumerateLogsAtPath:(id)path includeCompressedFiles:(BOOL)files withHandler:(id)handler;
-(id)format:(id)format level:(int)level applicationState:(id)state queueName:(id)name threadID:(int)anId inColor:(BOOL)color;
-(void)createLogFile;
-(id)init;
@end

