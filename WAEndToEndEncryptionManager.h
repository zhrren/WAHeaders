/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

#import "_ABAddressBookCopyArrayOfAllGroups.h"

#import "WAAxolotlStoreDelegate-Protocol.h"

@class NSMutableDictionary, NSMutableSet, NSObject<OS_dispatch_group>, WAAxolotlCryptoProvider, WAAxolotlStore;

@interface WAEndToEndEncryptionManager : _ABAddressBookCopyArrayOfAllGroups <WAAxolotlStoreDelegate>
{
    WAAxolotlCryptoProvider *_cryptoProvider;
    struct axolotl_store_context *store_context;
    struct ratchet_identity_key_pair *_identityKeyPair;
    NSObject<OS_dispatch_group> *_registrationDispatchGroup;
    BOOL _needServerRegistration;
    BOOL _digestCheckPending;
    NSMutableSet *_pendingKeyRequestJids;
    NSMutableDictionary *_pendingJidsPerStanza;
    NSMutableDictionary *_pendingStanzasPerJid;
    WAAxolotlStore *_axolotlStore;
    unsigned int _registrationId;
    struct axolotl_context *_globalContext;
}

+ (id)sharedManager;
- (void)setGlobalContext:(struct axolotl_context *)fp8;
- (struct axolotl_context *)globalContext;
- (void)setRegistrationId:(unsigned int)fp8;
- (unsigned int)registrationId;
- (void).cxx_destruct;
- (void)axolotlFailedWithError:(id)fp8;
- (BOOL)createIdentity;
- (BOOL)loadIdentity;
- (void)regenerateIdentity;
- (void)clearIdentity;
- (id)keychainIdentityQuery;
- (void)xmppConnectionStateDidChange:(id)fp8;
- (void)serverRejectRetryForReceipt:(id)fp8 registrationId:(int)fp12 fromJID:(id)fp16 participanr:(id)fp20;
- (void)requestNewKeyForJid:(id)fp8;
- (void)checkPreKeysCount;
- (void)sendMorePreKeys;
- (void)clearSessionForGroup:(id)fp8;
- (void)checkServerDigest;
- (void)registerWithServerWithCompletion:(id)fp(null);
- (void)endProcessingIncomingMessages;
- (void)beginProcessingIncomingMessages;
- (void)didReceiveRetryReceiptForStanzaID:(id)fp8 fromJID:(id)fp12 participantJID:(id)fp16 registrationId:(int)fp20 retryCount:(int)fp24;
- (void)retrySendMessageWithStanzaID:(id)fp8 fromJID:(id)fp12 participantJID:(id)fp16 retryCount:(int)fp20;
- (void)checkSessionForJID:(id)fp8 participant:(id)fp12 registrationId:(int)fp16;
- (id)e2eMessageForMessage:(id)fp8;
- (void)sendE2eMessage:(id)fp8 forParticipant:(id)fp12;
- (id)pendingMessagesForJid:(id)fp8;
- (void)addPendingMessage:(id)fp8 forParticipant:(id)fp12 toResendQueueForJid:(id)fp16;
- (BOOL)shouldEncryptMessage:(id)fp8;
- (unsigned int)sessionStatusForJid:(id)fp8;
- (id)e2eMessageForMessage:(id)fp8 forParticipant:(id)fp12 errorReason:(int *)fp16;
- (id)decryptedE2eMessageForVersion:(int)fp8 jid:(id)fp12 participant:(id)fp16 stanzaId:(id)fp20 cypherType:(id)fp24 encryptedData:(id)fp28 retryCount:(int)fp32 errorReason:(int *)fp36;
- (id)hashForParticipants:(id)fp8;
- (void)generatePreKeys;
- (long long)recepientIdForJid:(id)fp8;
- (void)dealloc;
- (id)init;

@end

