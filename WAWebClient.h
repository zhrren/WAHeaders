/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import </libobjc.A.h>
#import "XMPPConnectionHandler.h"

@class NSMutableDictionary, NSString, WAWebClientSession, XMPPConnection, NSMutableArray;
@protocol WAWebClientDelegate;

__attribute__((visibility("hidden")))
@interface WAWebClient : NSObject <XMPPConnectionHandler> {
	XMPPConnection* _xmppConnection;
	NSMutableDictionary* _deferredSyncTasks;
	BOOL _available;
	BOOL _active;
	NSMutableDictionary* _chatStates;
	WAWebClientSession* _currentSession;
	NSMutableArray* _requestsPendingChallenge;
	NSString* _actionResponseCacheEpoch;
	NSMutableDictionary* _actionResponseCache;
	NSMutableDictionary* _issuedChallenges;
	NSString* _lastSyncedBrowserID;
	BOOL _didResumeOnDifferentBrowser;
	id<WAWebClientDelegate> _delegate;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(assign, nonatomic) __weak id<WAWebClientDelegate> delegate;
@property(readonly, assign, nonatomic, getter=isActive) BOOL active;
@property(assign, nonatomic, getter=isAvailable) BOOL available;
@property(readonly, assign, nonatomic) BOOL hasActiveSession;
+(BOOL)isSupported;
-(void).cxx_destruct;
-(void)batteryLevelOrStateDidChange:(id)batteryLevelOrState;
-(void)handleChallengeResponse:(id)response;
-(id)challengeWithNotificationID:(id)notificationID webRef:(id)ref browserID:(id)anId syncType:(id)type;
-(void)sendChallengeToServerForRequest:(id)request notificationID:(id)anId syncType:(id)type;
-(void)reportMediaResponseCode:(unsigned)code mediaURL:(id)url forRequestID:(id)requestID;
-(void)notifyUserInactive;
-(void)notifyAddedContacts:(id)contacts removedJIDs:(id)jids removeMissingJIDs:(BOOL)jids3;
-(void)notifyAllChatsArchived:(BOOL)archived;
-(void)notifyAllChatsDeleted;
-(void)notifyChatDeleted:(id)deleted;
-(void)notifyAllChatsCleared;
-(void)notifyChatCleared:(id)cleared beforeDate:(id)date includeStarredMessages:(BOOL)messages;
-(void)notifyMessagesStarredStateChanged:(id)changed starred:(BOOL)starred inChatJID:(id)chatJID;
-(void)notifyMessagesDeleted:(id)deleted inChatSession:(id)chatSession;
-(void)notifyChangeOfMuteStateForJID:(id)jid;
-(void)notifyChangeOfArchiveStateInChatSession:(id)chatSession;
-(void)notifyChangeOfBroadcastListName:(id)broadcastListName;
-(void)markChatWithJID:(id)jid read:(BOOL)read;
-(void)notifyStatusChangeInMessage:(id)message;
-(void)forwardMessage:(id)message invisible:(BOOL)invisible update:(BOOL)update;
-(void)forwardMessagesIfNeeded:(id)needed isUpdate:(BOOL)update;
-(void)pauseOutgoingChatStateForJID:(id)jid;
-(void)setOutgoingChatState:(unsigned)state forJID:(id)jid;
-(unsigned)outgoingChatStateForJID:(id)jid;
-(void)sendGenericErrorResponseForRequestID:(id)requestID code:(int)code;
-(id)outgoingMessagesAndPTTFromMessages:(id)messages withStatusUpdateAfterTimestamp:(double)statusUpdateAfterTimestamp lastTimestamp:(double*)timestamp;
-(BOOL)isJIDCurrentUser:(id)user;
-(void)sendResumeResponseWithChatSessionStates:(id)chatSessionStates requestID:(id)anId;
-(void)sendJIDsOfMembersInBroadcastList:(id)broadcastList;
-(void)sendContactsWithRequestID:(id)requestID isDuplicate:(BOOL)duplicate isPreemptive:(BOOL)preemptive;
-(void)sendChatSessionsWithRequestID:(id)requestID isDuplicate:(BOOL)duplicate isPreemptive:(BOOL)preemptive;
-(void)sendPreemptiveResponse;
-(void)forwardRecentlyRelevantMessages;
-(void)forwardLastMessageInChats:(id)chats;
-(void)setBlocked:(BOOL)blocked forElement:(id)element inNotification:(id)notification;
-(void)handleRemoveBlock:(id)block inNotification:(id)notification;
-(void)handleAddBlock:(id)block inNotification:(id)notification;
-(void)handleCreateGroup:(id)group inNotification:(id)notification;
-(void)handleSubjectGroup:(id)group inNotification:(id)notification;
-(void)handleLeaveGroup:(id)group inNotification:(id)notification;
-(void)handlePromoteGroup:(id)group inNotification:(id)notification;
-(void)handleAddGroup:(id)group inNotification:(id)notification;
-(void)handleRemoveGroup:(id)group inNotification:(id)notification;
-(void)handleDeletePicture:(id)picture inNotification:(id)notification;
-(void)handleSetPicture:(id)picture inNotification:(id)notification;
-(void)setStarredState:(BOOL)state forElement:(id)element inNotification:(id)notification;
-(void)handleUnstarChat:(id)chat inNotification:(id)notification;
-(void)handleStarChat:(id)chat inNotification:(id)notification;
-(void)handleMuteChat:(id)chat inNotification:(id)notification;
-(void)setArchivedState:(BOOL)state forElement:(id)element inNotification:(id)notification;
-(void)handleUnarchiveChat:(id)chat inNotification:(id)notification;
-(void)handleArchiveChat:(id)chat inNotification:(id)notification;
-(void)handleClearChat:(id)chat inNotification:(id)notification;
-(void)handleDeleteChat:(id)chat inNotification:(id)notification;
-(void)handlePlayedReceived:(id)received inNotification:(id)notification;
-(void)handleSetStatus:(id)status inNotification:(id)notification;
-(void)handleSetRead:(id)read inNotification:(id)notification;
-(void)handleRecordingPresence:(id)presence inNotification:(id)notification;
-(void)handlePausedPresence:(id)presence inNotification:(id)notification;
-(void)handleComposingPresence:(id)presence inNotification:(id)notification;
-(void)handleSubscribePresence:(id)presence inNotification:(id)notification;
-(void)handleUnavailablePresence:(id)presence inNotification:(id)notification;
-(void)handleAvailablePresence:(id)presence inNotification:(id)notification;
-(void)handleDebugAction:(id)action inNotification:(id)notification;
-(void)handleSetAction:(id)action inNotification:(id)notification;
-(void)handleRelayAction:(id)action inNotification:(id)notification;
-(void)handleGroupQuery:(id)query inNotification:(id)notification;
-(void)handlePreviewQuery:(id)query inNotification:(id)notification;
-(void)handleMessage_InfoQuery:(id)query inNotification:(id)notification;
-(void)handleReceiptQuery:(id)query inNotification:(id)notification;
-(void)handleResumeQuery:(id)query inNotification:(id)notification;
-(void)handleMediaQuery:(id)query inNotification:(id)notification;
-(void)handleMessageQuery:(id)query inNotification:(id)notification;
-(void)handleContactsQuery:(id)query inNotification:(id)notification;
-(void)handleChatQuery:(id)query inNotification:(id)notification;
-(void)handleActionQuery:(id)query inNotification:(id)notification;
-(void)handleSyncQuery:(id)query inNotification:(id)notification;
-(void)handleDeleteAction:(id)action inNotification:(id)notification;
-(void)rejectServerLoginWithWebRef:(id)webRef reason:(unsigned)reason;
-(void)handlePersistentLoginRequestErrorForRequest:(id)request;
-(void)acceptPersistentLoginRequest:(id)request;
-(void)handleSyncAction:(id)action inNotification:(id)notification;
-(void)handleTask:(id)task inNotification:(id)notification;
-(void)handleAllDeferredTasks;
-(BOOL)handleNotification:(id)notification onConnection:(id)connection;
-(void)connectionDidReceiveOfflineCompleteMarker:(id)connection;
-(BOOL)handleLoginResponseStanza:(id)stanza onConnection:(id)connection;
-(void)xmppConnection:(id)connection initialConfigurationAsync:(id)async;
-(void)clearCurrentSession;
-(void)makeSessionCurrent:(id)current;
-(void)terminateCurrentSession;
-(void)beginNewSessionWithQRCode:(id)qrcode completion:(id)completion;
-(void)beginSessionWithQRCode:(id)qrcode completion:(id)completion;
-(void)removeSessionWithData:(id)data;
-(id)allSavedSessionDataObjects;
-(void)dealloc;
-(id)initWithXMPPConnection:(id)xmppconnection;
@end

