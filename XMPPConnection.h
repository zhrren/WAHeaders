/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

#import "_ABAddressBookCopyArrayOfAllGroups.h"

#import "XMPPStreamDelegate-Protocol.h"

@class NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>, NSString, WATimer, XMPPConnectionConfiguration, XMPPStream;

@interface XMPPConnection : _ABAddressBookCopyArrayOfAllGroups <XMPPStreamDelegate>
{
    WATimer *_updatePresenceTimer;
    NSMutableSet *_deferredSubscribes;
    NSMutableDictionary *_clientData;
    unsigned int _lastSentPresence;
    NSMutableDictionary *_timers;
    NSMutableDictionary *_unsentMessages;
    NSMutableDictionary *_unsentCallStanzas;
    NSMutableArray *_pendingRequests;
    BOOL _firstOfflineMessageReceived;
    NSMutableArray *_recentlySentAcks;
    NSMutableArray *_acks;
    NSMutableDictionary *_sentReadReceipts;
    NSMutableArray *_readReceiptsToProcess;
    NSObject<OS_dispatch_source> *_delayedProcessTimer;
    double _connectionAttemptStartTime;
    double _connectionStartTime;
    NSMutableArray *_incomingMessageStanzasToDispatch;
    BOOL _isDispatchingIncomingMessageStanzas;
    double _lastIncomingMessageStanzaDispatchTime;
    NSObject<OS_dispatch_source> *_checkConnectionTimer;
    NSObject<OS_dispatch_source> *_checkFieldStatsTimer;
    int _connectionHandlersLock;
    NSMutableArray *_connectionHandlers;
    int _stateLock;
    NSDictionary *_stateChangeCallbacks;
    unsigned int _state;
    unsigned int _networkStatus;
    int _networkStatusLock;
    NSString *_radioAccessTechnology;
    XMPPConnectionConfiguration *_config;
    BOOL _isHoldingConnectionLock;
    int _backgroundConnectionAttempts;
    int _foregroundConnectionAttempts;
    BOOL _voipNetworkDidChange;
    BOOL _checkConnectionScheduledOnStateChange;
    NSMutableArray *_connectionConditionals;
    BOOL _isConnectionCheckingInProgress;
    BOOL _isDisconnectRequested;
    int _suppressReconnectCounter;
    NSMutableArray *_internalDisconnectCallbacks;
    struct __SCNetworkReachability *_reachabilityRef;
    CDAnonymousStruct8 _reachabilityContext;
    BOOL _isCheckingInternetConnection;
    NSString *_lastConnectionErrorMessage;
    unsigned int _xmppAuthNetworkStatus;
    BOOL _active;
    int _lastOfflineQueueCount;
    NSString *_serviceType;
    NSDate *_accountCreation;
    NSDate *_accountExpiration;
    NSString *_serverPropsVersion;
    id <XMPPConnectionDelegate> _delegate;
    XMPPStream *_stream;
    NSObject<OS_dispatch_queue> *_xmppQueue;
    double _voipPushDelayWithSkew;
    double _serverTimeShift;
}

+ (id)stateToString:(unsigned int)fp8;
- (id)xmppQueue;
- (id)stream;
- (void)setDelegate:(id)fp8;
- (id)delegate;
- (void)setServerPropsVersion:(id)fp8;
- (id)serverPropsVersion;
- (void)setServerTimeShift:(double)fp8;
- (double)serverTimeShift;
- (void)setAccountExpiration:(id)fp8;
- (id)accountExpiration;
- (void)setAccountCreation:(id)fp8;
- (id)accountCreation;
- (void)setServiceType:(id)fp8;
- (id)serviceType;
- (void)setVoipPushDelayWithSkew:(double)fp8;
- (double)voipPushDelayWithSkew;
- (void)setLastOfflineQueueCount:(int)fp8;
- (int)lastOfflineQueueCount;
- (BOOL)isActive;
- (void).cxx_destruct;
- (id)createPresence:(unsigned int)fp8 withNickname:(id)fp12;
- (id)convertOutgoingEmojiString:(id)fp8;
- (void)checkInternetConnection;
- (void)radioAccessTechnologyDidChange:(id)fp8;
- (void)reachabilityDidChangeWithFlags:(unsigned int)fp8;
- (void)logReachabilityFlags:(unsigned int)fp8;
- (void)connectIfPossible;
- (void)checkConnection;
- (BOOL)isSocketHealthy;
- (void)forceLeaveFetchOfflineStateIfNeeded;
- (BOOL)isConnected;
- (void)connect;
- (void)resetConnectionAttempts;
- (void)reallyConnect;
- (void)checkFieldStats;
- (void)uploadFieldStats;
- (void)closeStream;
- (BOOL)xmppStream:(id)fp8 didReceiveLoginResponseStanza:(id)fp12;
- (void)xmppStream:(id)fp8 initialConfigurationAsync:(id)fp(null);
- (void)xmppStreamDidClose:(id)fp8;
- (void)xmppStream:(id)fp8 didReceiveCustomStanza:(id)fp12;
- (void)xmppStream:(id)fp8 didReceiveNotification:(id)fp12;
- (void)xmppStream:(id)fp8 didReceiveChatState:(id)fp12;
- (void)xmppStream:(id)fp8 didReceiveAck:(id)fp12;
- (void)xmppStream:(id)fp8 didReceiveReceipt:(id)fp12;
- (void)xmppStream:(id)fp8 didReceivePresence:(id)fp12;
- (void)xmppStream:(id)fp8 didReceiveMessages:(id)fp12;
- (void)xmppStream:(id)fp8 didReceiveIQ:(id)fp12;
- (void)xmppStreamDidNotAuthenticate:(id)fp8 lockDuration:(double)fp12 retryAfter:(double)fp20 reasonCode:(int)fp28;
- (void)xmppStreamDidAuthenticate:(id)fp8 attributes:(id)fp12 serverTimeShift:(double)fp16;
- (void)xmppStreamDidOpen:(id)fp8;
- (void)sendAckForNotification:(id)fp8;
- (void)sendIQResponse:(id)fp8;
- (void)reloadPassword;
- (void)ackMediaForURLString:(id)fp8 sourceIsSelf:(BOOL)fp12 completion:(id)fp(null);
- (void)requestUploadUrlForFileHash:(id)fp8 origHash:(id)fp12 filetype:(unsigned int)fp16 filesize:(unsigned long long)fp20 mediaIndex:(int)fp28 totalMediaCount:(int)fp32 completion:(id)fp(null);
- (void)internalRequestUploadUrlForFileHash:(id)fp8 origHash:(id)fp12 filetype:(unsigned int)fp16 filesize:(unsigned long long)fp20 mediaIndex:(int)fp28 totalMediaCount:(int)fp32 completion:(id)fp(null);
- (void)ping;
- (void)sendSharedItem:(id)fp8;
- (void)sendMessageStanza:(id)fp8;
- (void)endMessageTimeout:(id)fp8;
- (void)startMessageTimeout:(id)fp8;
- (void)markMessagesAsUnsent;
- (unsigned int)serverConnectionStatus;
- (void)setNetworkStatus:(unsigned int)fp8;
- (unsigned int)networkStatus;
- (void)handleRemotePushWithPayload:(id)fp8;
- (void)drop;
- (void)disconnectIfStuckInConnecting;
- (void)disconnect;
- (void)performBlock:(id)fp(null) onQueue:(void)fp8 onConnectionState:(id)fp12;
- (void)setState:(unsigned int)fp8;
- (unsigned int)state;
- (void)logConnectionAttemptErrorMessageIfNeeded:(id)fp8;
- (void)checkIfConnectionIsAllowedWithCompletionHandler:(id)fp(null);
- (void)registerConnectionConditional:(id)fp(null) onQueue:(void)fp8;
- (unsigned short)currentPort;
- (id)currentHost;
- (id)currentIP;
- (void)setXmppUser:(id)fp8;
- (void)cancelAllRequests;
- (void)resendAllPendingRequests;
- (void)enqueueRequest:(id)fp8;
- (BOOL)isRequestPending:(id)fp8;
- (void)notifyConnectionHandlersOfOfflineMarker;
- (void)removeConnectionHandler:(id)fp8;
- (void)addConnectionHandler:(id)fp8;
- (id)genericNetworkErrorMessage;
- (id)networkStatusErrorMessage;
- (void)systemTimeChanged:(id)fp8;
- (void)performBlockOnXMPPQueue:(id)fp(null);
- (void)setActive:(BOOL)fp8;
- (void)dealloc;
- (id)initWithConfiguration:(id)fp8;
- (void)processIncomingCustomStanza:(id)fp8;
- (void)delayedReceiptsUpdate;
- (void)processIncomingAck:(id)fp8;
- (void)processIncomingNotification:(id)fp8;
- (void)processIncomingChatState:(id)fp8;
- (void)processIncomingPresence:(id)fp8;
- (void)dispatchStanzasToMainThreadWithLastCount:(int)fp8 attempts:(int)fp12;
- (void)dispatchStanzasToMainThread:(id)fp8;
- (void)processIncomingMessages:(id)fp8;
- (BOOL)isMessageStanzaRecentlyAcked:(id)fp8;
- (void)processIncomingIQ:(id)fp8;
- (void)performOnStreamOpen;
- (void)sendCallReceiptOrAck:(id)fp8;
- (void)sendCallStanza:(id)fp8;
- (void)endCallStanzaTimeout:(id)fp8;
- (void)startCallStanzaTimeout:(id)fp8;
- (void)removeCallWatchdogs;
- (void)sendServerErrorReceiptForMessage:(id)fp8;
- (void)sendRetryReceiptForMessageId:(id)fp8 toJID:(id)fp12 participant:(id)fp16 retryCount:(int)fp20 timeAttribute:(id)fp24;
- (void)sendRetryReceiptForMessage:(id)fp8 retryCount:(int)fp12;
- (void)sendUnknownTagsReceiptForMessage:(id)fp8 tags:(id)fp12;
- (void)sendErrorNoEncryptionReceiptForMessage:(id)fp8 withType:(id)fp12;
- (void)sendReadReceiptsForChatMessages:(id)fp8;
- (void)sendPlayedReceiptForMessage:(id)fp8;
- (void)sendDeliveryReceiptsForMessageStanzas:(id)fp8;
- (void)sendDeliveryReceiptsForChatMessages:(id)fp8;
- (id)processIncomingMessageStanzas:(id)fp8;
- (int)fieldStatsMeticForAxolotlError:(int)fp8;
- (void)sendMessage:(id)fp8 forParticipant:(id)fp12;
- (void)resendUnsentCallStanzas;
- (void)resendUnsentMessages;
- (void)respondToServerErrorReceiptByResendingMessage:(id)fp8 toParticipant:(id)fp12;
- (BOOL)hasPendingRequestsForGroupWithJID:(id)fp8 participantJID:(id)fp12;
- (void)changeStatus:(unsigned int)fp8 forIncomingMessageWithStanzaID:(id)fp12 fromJID:(id)fp16 participantJID:(id)fp20;
- (void)cleanDirtyBits:(id)fp8 completion:(id)fp(null);
- (void)reportVoipPushDelay:(double)fp8;
- (void)sendGlobalPushConfig:(id)fp8 customSettings:(id)fp12 completion:(id)fp(null);
- (void)requestCapabilityForJIDs:(id)fp8 completion:(id)fp(null);
- (void)resetPresenceStateOnStreamClose;
- (void)updatePresence;
- (void)sendPushName:(id)fp8;
- (void)sendPresenceWithNickname:(id)fp8;
- (void)resetCachedLastSeen;
- (id)lastSeenTimestampForJID:(id)fp8;
- (unsigned int)latestChatStateForGroupWithJID:(id)fp8 returningParticipantJID:(out id *)fp12;
- (unsigned int)chatStateForContactWithJID:(id)fp8;
- (void)checkIncomingChatStateForJID:(id)fp8 participantJID:(id)fp12;
- (void)setIncomingChatState:(unsigned int)fp8 forJID:(id)fp12 participantJID:(id)fp16;
- (void)updateLastSentChatState:(unsigned int)fp8 forJID:(id)fp12;
- (void)reportChatState:(unsigned int)fp8 forJID:(id)fp12;
- (void)presenceSubscribeToJIDIfNecessary:(id)fp8;
- (void)resetAllChatStatesAndClearSubscriptions:(BOOL)fp8;
- (void)removeClientDataForJID:(id)fp8;
- (id)addClientDataForJID:(id)fp8;
- (id)clientDataForJID:(id)fp8;
- (BOOL)isOnline:(id)fp8;
- (void)sendRecoveryToken:(id)fp8 completion:(id)fp(null);
- (void)queryServerPropertiesWithCompletion:(id)fp(null);
- (void)requestBroadcastListsWithCompletion:(id)fp(null);
- (void)deleteBroadcastListFromServer:(id)fp8 completion:(id)fp(null);
- (void)syncPhoneNumbers:(id)fp8 deletedJIDs:(id)fp12 mode:(unsigned int)fp16 context:(unsigned int)fp20 timeout:(double)fp24 completion:(id)fp(null);
- (void)requestSyncWithContext:(id)fp8;
- (void)stopLocationSharingForGroupWithJID:(id)fp8;
- (void)requestLocationSharingForGroupWithJID:(id)fp8 reportParticipants:(BOOL)fp12 completion:(id)fp(null);
- (void)setLocationSharingEndTime:(id)fp8 forGroupWithJID:(id)fp12 completion:(id)fp(null);
- (void)reportLocation:(id)fp8;
- (void)requestParticipatingGroupsWithCompletion:(id)fp(null);
- (void)deleteGroupWithJID:(id)fp8 completion:(id)fp(null);
- (void)leaveGroupWithJID:(id)fp8 webClientRequestID:(id)fp12 completion:(id)fp(null);
- (void)requestInfoForGroupWithJID:(id)fp8 completion:(id)fp(null);
- (void)demoteParticipants:(id)fp8 inGroupWithJID:(id)fp12 completion:(id)fp(null);
- (void)promoteParticipants:(id)fp8 inGroupWithJID:(id)fp12 webClientRequestID:(id)fp16 completion:(id)fp(null);
- (void)addParticipants:(id)fp8 toGroupWithJID:(id)fp12 webClientRequestID:(id)fp16 completion:(id)fp(null);
- (void)removeParticipants:(id)fp8 fromGroupWithJID:(id)fp12 webClientRequestID:(id)fp16 completion:(id)fp(null);
- (void)setSubject:(id)fp8 forGroupWithJID:(id)fp12 webClientRequestID:(id)fp16 completion:(id)fp(null);
- (void)createGroupWithSubject:(id)fp8 participantJIDs:(id)fp12 key:(id)fp16 locked:(BOOL)fp20 webClientRequestID:(id)fp24 completion:(id)fp(null);
- (void)getProfilePictureForJID:(id)fp8 type:(unsigned int)fp12 identifier:(id)fp16 completion:(id)fp(null);
- (void)setProfilePictureForJID:(id)fp8 pictureData:(id)fp12 previewData:(id)fp16 webClientRequestID:(id)fp20 completion:(id)fp(null);
- (void)getStatusForJIDs:(id)fp8 completion:(id)fp(null);
- (void)setStatus:(id)fp8 fromWebClientRequestID:(id)fp12 completion:(id)fp(null);
- (void)setPrivacySettings:(id)fp8 completion:(id)fp(null);
- (void)queryPrivacySettingsWithCompletion:(id)fp(null);
- (void)submitPaymentReceipt:(id)fp8 completion:(id)fp(null);
- (void)changeNumberWithUsername:(id)fp8 password:(id)fp12 completion:(id)fp(null);
- (void)normalizePhoneNumber:(id)fp8 countryCode:(id)fp12 completion:(id)fp(null);
- (void)deleteAccountWithFeedback:(id)fp8 completion:(id)fp(null);
- (void)reportSpamMessagesInChatSession:(id)fp8;
- (void)sendBlockedContactsList:(id)fp8 webClientRequestID:(id)fp12 completion:(id)fp(null);
- (void)getBlockedContactsListWithCompletion:(id)fp(null);

@end

