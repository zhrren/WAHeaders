/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "WAUpgradeCallback.h"
#import "UITabBarControllerDelegate.h"
#import "WAChatDatabaseMigrationViewControllerDelegate.h"
#import "WARepairDatabaseViewControllerDelegate.h"
#import </libobjc.A.h>
#import "RestoreBackupViewControllerDelegate.h"
#import "WAVoiceCallViewControllerDelegate.h"
#import "WADeleteAccountControllerDelegate.h"
#import "WhatsApp-Structs.h"
#import "PKPushRegistryDelegate.h"
#import "WATOSMainViewControllerDelegate.h"
#import "VerificationControllerDelegate.h"
#import "UINavigationControllerDelegate.h"
#import "UIApplicationDelegate.h"

@class WACallWindow, NSString, WATOSMainViewController, UIWindow, VerificationController, WAVoiceCallViewController, WATabBarController, PKPushRegistry, UINavigationController, WAAutomationWindow, WAChatListViewController, WATimelockViewController;
@protocol OS_dispatch_group;

__attribute__((visibility("hidden")))
@interface WhatsAppAppDelegate : NSObject <WAUpgradeCallback, UITabBarControllerDelegate, WAChatDatabaseMigrationViewControllerDelegate, WARepairDatabaseViewControllerDelegate, RestoreBackupViewControllerDelegate, WAVoiceCallViewControllerDelegate, WADeleteAccountControllerDelegate, PKPushRegistryDelegate, WATOSMainViewControllerDelegate, VerificationControllerDelegate, UINavigationControllerDelegate, UIApplicationDelegate> {
	BOOL _databaseMigrationInProgress;
	BOOL _databaseRepairInProgress;
	BOOL _suppressRootViewSetUpOnEnteringForeground;
	BOOL _applicationIsBecomingActive;
	BOOL _upgrade;
	BOOL _applicationUILoaded;
	BOOL _changeNumberPending;
	BOOL _buildExpired;
	BOOL _contactsAccessRequestInProgress;
	BOOL _isSuspended;
	BOOL _needsTerminateOnBackground;
	BOOL _allUserNotificationActionsEnabled;
	NSString* _jidToCallOnConnect;
	NSString* _pendingApplicationShortcutAction;
	NSObject<OS_dispatch_group>* _rotationDispatchGroup;
	BOOL _showMicPermissionErrorOnDismissCallScreen;
	BOOL _showNoCallingErrorOnDismissCallScreen;
	int _noCallingErrorCode;
	PKPushRegistry* _voipRegistry;
	BOOL _needsAPNSToken;
	BOOL _needsVOIPToken;
	int _lastSeenVOIPPushIndex;
	int _lastSeenAPNSPushIndex;
	id _backgroundFetchCompletionHandler;
	BOOL _hasAppFinishedLaunching;
	int _previousLaunchResult;
	WAAutomationWindow* _automationWindow;
	NSObject<OS_dispatch_group>* _dataProtectionDispatchGroup;
	BOOL _missedCallAtLaunch;
	BOOL _presentCallScreenAgainAfterDismiss;
	int _savedCallState;
	BOOL _recentlyDidCompleteDeleteAccount;
	BOOL _shareTooltipShown;
	BOOL _groupInfoTooltipShown;
	BOOL _settingsTooltipShown;
	BOOL _groupChatTooltipShown;
	BOOL _keyboardFailedToShow;
	BOOL _chatDatabaseAccessible;
	UIWindow* _window;
	WATabBarController* _tabBarController;
	VerificationController* _verificationController;
	NSString* _chatJID;
	WACallWindow* _callWindow;
	unsigned _appWakeReason;
	UINavigationController* _unsupportedDeviceViewController;
	WATimelockViewController* _timelockViewController;
	WAVoiceCallViewController* _activeVoiceCallViewController;
	UIWindow* _tosUIWindow;
	WATOSMainViewController* _tosUIViewController;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(retain, nonatomic) WATOSMainViewController* tosUIViewController;
@property(retain, nonatomic) UIWindow* tosUIWindow;
@property(retain, nonatomic) WAVoiceCallViewController* activeVoiceCallViewController;
@property(retain, nonatomic) WATimelockViewController* timelockViewController;
@property(retain, nonatomic) UINavigationController* unsupportedDeviceViewController;
@property(readonly, assign, nonatomic, getter=isDisplayingMainAppUI) BOOL displayingMainAppUI;
@property(assign, nonatomic, getter=isChatDatabaseAccessible) BOOL chatDatabaseAccessible;
@property(assign) unsigned appWakeReason;
@property(readonly, assign, nonatomic, getter=isCallWindowVisible) BOOL callWindowVisible;
@property(retain, nonatomic) WACallWindow* callWindow;
@property(retain, nonatomic) NSString* chatJID;
@property(readonly, assign, nonatomic, getter=isTOSScreenVisible) BOOL tosScreenVisible;
@property(assign, nonatomic) BOOL keyboardFailedToShow;
@property(assign, nonatomic) BOOL groupChatTooltipShown;
@property(assign, nonatomic) BOOL settingsTooltipShown;
@property(assign, nonatomic) BOOL groupInfoTooltipShown;
@property(assign, nonatomic) BOOL shareTooltipShown;
@property(readonly, assign, nonatomic) BOOL recentlyDidCompleteDeleteAccount;
@property(readonly, assign, nonatomic) WAChatListViewController* chatListViewController;
@property(retain, nonatomic) VerificationController* verificationController;
@property(retain, nonatomic) WATabBarController* tabBarController;
@property(retain, nonatomic) UIWindow* window;
+(void)wa_didUpgradeFrom:(id)from to:(id)to;
-(void).cxx_destruct;
-(BOOL)application:(id)application continueUserActivity:(id)activity restorationHandler:(id)handler;
-(void)application:(id)application handleWatchKitExtensionRequest:(id)request reply:(id)reply;
-(void)snapshotForAutomation;
-(void)openConnectionIfNeeded;
-(void)applicationReallyDidResume;
-(void)applicationDidResume;
-(void)applicationWillSuspendWithCompletionHandler:(id)application;
-(void)callBackJID:(id)jid;
-(void)declineCall;
-(void)askToUnblockJIDBeforeCalling:(id)unblockJIDBeforeCalling;
-(void)performVOIPActivitiesOnConnectionStateChange;
-(void)makeOutgoingCallToJIDIfPossible:(id)jidifPossible;
-(void)switchToRecentsTab;
-(void)scheduleOutgoingCallToJIDOnConnect:(id)jidonConnect;
-(void)makeVoiceCallViewControllerActive;
-(id)voiceCallViewControllerNeedsUpdatedSnapshot:(id)snapshot;
-(void)voiceCallViewControllerWillResignActive:(id)voiceCallViewController;
-(void)voiceCallViewController:(id)controller didRequestToShowChatWithJID:(id)jid presentKeyboard:(BOOL)keyboard;
-(void)voiceCallViewControllerDidFinish:(id)voiceCallViewController;
-(void)voiceCallViewControllerWillFinish:(id)voiceCallViewController;
-(void)handleCallBusy;
-(void)handleCallTimeout;
-(void)handleCallFailureWithErrorCode:(int)errorCode;
-(void)showNoCallingError;
-(void)cancelOutgoingCall;
-(void)handleCallTerminationByPeer;
-(void)dismissCallScreen;
-(void)forcePortraitOrientation;
-(void)reallyPresentCallScreenWithInitialCallState:(int)initialCallState;
-(void)presentCallScreenWithInitialCallState:(int)initialCallState;
-(void)application:(id)application didChangeStatusBarOrientation:(int)orientation;
-(void)application:(id)application willChangeStatusBarOrientation:(int)orientation duration:(double)duration;
-(void)chatDatabaseMigrationViewController:(id)controller didCompleteSuccessfully:(BOOL)successfully;
-(void)restoreBackupViewControllerDidFinish:(id)restoreBackupViewController;
-(void)restoreFromBackupAfterFailedDatabaseRepairWithNavigationController:(id)navigationController;
-(void)showUnableToRecoverChatHistoryErrorAndTerminate;
-(void)repairDatabaseViewControllerDidFail:(id)repairDatabaseViewController;
-(void)showUnexpectedDatabaseStateAndTerminate;
-(void)repairDatabaseViewControllerDidSucceed:(id)repairDatabaseViewController;
-(void)performChatDatabaseRepair;
-(void)performPostRestoreChangesIfNecessary;
-(void)tryToLoadChatStoreWithCompletion:(id)completion;
-(void)registerForMigrationAndRepairNotifications;
-(void)switchToVerificationController:(id)verificationController;
-(void)detectMobileNetworkChange;
-(void)startChangeNumberIfPossible;
-(void)startChangeNumberSequence;
-(void)deleteAccountControllerDidCancel:(id)deleteAccountController;
-(void)deleteAccountControllerDidFinish:(id)deleteAccountController;
-(void)reallyDeleteAccount;
-(void)startDeleteAccountSequence;
-(void)verificationControllerDidCancel:(id)verificationController;
-(void)verificationControllerDidSucceed:(id)verificationController;
-(void)chatManagerDidChangeTimelockState:(id)chatManager;
-(void)chatStorageDidDeleteDatabase:(id)chatStorage;
-(void)chatStorageDidLoadDatabase:(id)chatStorage;
-(void)tabBarController:(id)controller didSelectViewController:(id)controller2;
-(BOOL)tabBarController:(id)controller shouldSelectViewController:(id)controller2;
-(void)submitPushTokensIfReady;
-(void)pushRegistry:(id)registry didInvalidatePushTokenForType:(id)type;
-(void)pushRegistry:(id)registry didReceiveIncomingPushWithPayload:(id)payload forType:(id)type;
-(void)pushRegistry:(id)registry didUpdatePushCredentials:(id)credentials forType:(id)type;
-(void)application:(id)application didFailToRegisterForRemoteNotificationsWithError:(id)error;
-(void)application:(id)application didRegisterForRemoteNotificationsWithDeviceToken:(id)deviceToken;
-(void)registerForPushTokens;
-(void)registerUserNotificationSettings;
-(void)registerForVOIPPushIfNeeded;
-(void)application:(id)application performActionForShortcutItem:(id)shortcutItem completionHandler:(id)handler;
-(void)processStarredMessagesApplicationShortcut;
-(void)processCameraApplicationShortcut;
-(void)processNewChatApplicationShortcut;
-(void)processSearchApplicationShortcut;
-(void)prepareUIForShortcutActionWithCompletion:(id)completion;
-(void)processApplicationShortcutAction:(id)action;
-(void)reconfigureApplicationShortcuts;
-(void)application:(id)application performFetchWithCompletionHandler:(id)completionHandler;
-(void)application:(id)application handleEventsForBackgroundURLSession:(id)backgroundURLSession completionHandler:(id)handler;
-(void)application:(id)application handleActionWithIdentifier:(id)identifier andJID:(id)jid fromSource:(id)source withResponseInfo:(id)responseInfo completionHandler:(id)handler;
-(void)application:(id)application handleActionWithIdentifier:(id)identifier forRemoteNotification:(id)remoteNotification withResponseInfo:(id)responseInfo completionHandler:(id)handler;
-(void)application:(id)application handleActionWithIdentifier:(id)identifier forRemoteNotification:(id)remoteNotification completionHandler:(id)handler;
-(void)application:(id)application handleActionWithIdentifier:(id)identifier forLocalNotification:(id)localNotification withResponseInfo:(id)responseInfo completionHandler:(id)handler;
-(void)application:(id)application handleActionWithIdentifier:(id)identifier forLocalNotification:(id)localNotification completionHandler:(id)handler;
-(void)applicationUserDidTakeScreenshot:(id)applicationUser;
-(unsigned)application:(id)application supportedInterfaceOrientationsForWindow:(id)window;
-(void)application:(id)application reallyDidReceiveRemoteNotification:(id)really fetchCompletionHandler:(id)handler;
-(void)application:(id)application didReceiveRemoteNotification:(id)notification fetchCompletionHandler:(id)handler;
-(void)application:(id)application reallyDidReceiveRemoteNotification:(id)really;
-(void)application:(id)application didReceiveRemoteNotification:(id)notification;
-(void)application:(id)application reallyDidReceiveLocalNotification:(id)really;
-(void)application:(id)application didReceiveLocalNotification:(id)notification;
-(void)application:(id)application didRegisterUserNotificationSettings:(id)settings;
-(void)applicationDidReceiveMemoryWarning:(id)application;
-(void)applicationDidEnterBackground:(id)application;
-(void)applicationReallyWillEnterForeground:(id)applicationReally;
-(void)applicationWillEnterForeground:(id)application;
-(void)applicationWillResignActive:(id)application;
-(void)applicationReallyDidBecomeActive:(id)applicationReally;
-(void)applicationDidBecomeActive:(id)application;
-(void)applicationWillTerminate:(id)application;
-(BOOL)application:(id)application openURL:(id)url sourceApplication:(id)application3 annotation:(id)annotation;
-(BOOL)application:(id)application reallyDidFinishLaunchingWithOptions:(id)really;
-(BOOL)application:(id)application didFinishLaunchingWithOptions:(id)options;
-(void)reportPreviousCrashes;
-(void)checkForDiedWhileDisconnecting;
-(void)checkForFailedToLaunch;
-(void)stopWatchingForFailedToLaunch;
-(void)setFailedToLaunchReason:(int)launchReason;
-(void)checkForGeneralCrashes;
-(void)initializePreferences;
-(void)connectionStateDidChange:(id)connectionState;
-(void)updateApplicationBadgeCountAllowDecrements:(BOOL)decrements;
-(BOOL)isApplicationBadgeEnabled;
-(void)showDeferredNotifications;
-(void)requestAccessToContactsIfNecessary;
-(void)checkAddressBookPermissionsWithCompletionHandler:(id)completionHandler;
-(BOOL)showChatWithJIDFromNotification:(id)notification;
-(BOOL)shouldDeferInAppNotifications;
-(BOOL)canShowInAppNotificationForJID:(id)jid;
-(void)reconfigureUserNotificationSettingsForTOS;
-(void)automationShowTOSScreenForStage:(int)stage;
-(void)tosParametersDidChange:(id)tosParameters;
-(void)tosMainViewControllerDidAccept:(id)tosMainViewController;
-(void)tosMainViewControllerDidDismiss:(id)tosMainViewController;
-(void)dismissTOSScreen;
-(void)presentTOSScreenForStage:(unsigned)stage;
-(void)presentTOSScreenIfNecessary;
-(void)doHelperTasksAfterApplicationLaunch:(BOOL)launch;
-(void)showSettingsTooltipIfNeeded;
-(void)loadApplicationUI;
-(void)setupRootViewController;
-(void)setupRootViewControllerIfPossible;
-(void)configureTabBarController;
-(void)callabilityDidChange:(id)callability;
-(unsigned)indexOfRecentsTab;
-(id)callHistoryTabBarItem;
-(void)resetViewControllers;
-(void)presentStorageAlert;
-(void)openChatAnimated:(BOOL)animated presentKeyboard:(BOOL)keyboard highlightedMessage:(id)message;
-(void)openChatAnimated:(BOOL)animated presentKeyboard:(BOOL)keyboard;
-(void)jumpToAllChatsAnimated:(BOOL)allChatsAnimated;
-(void)showMicrophoneAccessReminderScreen;
-(void)presentHelperScreenIfNecessary;
-(void)performLegacyPushSettingsCheck;
-(void)presentAppReviewPromptIfNecessaryWithCompletion:(id)completion;
-(void)reauthenticate;
-(void)performBlockAfterFirstUnlock:(id)unlock;
-(void)protectedDataDidBecomeAvailable:(id)protectedData;
-(id)init;
-(void)setNeedsTerminateOnBackground;
-(id)jidFromLocalNotification:(id)localNotification;
-(id)jidFromUserInfo:(id)userInfo;
-(void)checkForUpdatedBetaBuildIfNeeded;
-(id)strippedRemoteNotification:(id)notification;
-(void)processLocalNotificationAtLaunch:(id)launch;
-(void)processPushInfo:(id)info;
-(void)generateMemoryWarning:(id)warning;
-(void)notifyReplyFailedForJID:(id)jid contactName:(id)name;
-(void)replyWithMessage:(id)message toJID:(id)jid markAsRead:(BOOL)read completion:(id)completion;
@end

