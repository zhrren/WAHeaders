/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import </libobjc.A.h>
#import "WhatsApp-Structs.h"
#import "WAChatBarDelegate.h"
#import "WAWebPageFromTextLoaderDelegate.h"
#import "WAChatBarManager.h"

@class WAWebPageFromTextLoader, NSString, WAChatBar, UIViewController, NSNumber, UIView, UIButton;
@protocol OS_dispatch_group, WAChatBarManagerDelegate;

__attribute__((visibility("hidden")))
@interface WAChatBarManagerImpl : NSObject <WAChatBarManager, WAChatBarDelegate, WAWebPageFromTextLoaderDelegate> {
	WAChatBar* _placeholderChatBar;
	WAChatBar* _chatBar;
	unsigned _keyboardState;
	BOOL _interfaceRotationInProgress;
	BOOL _notifyDelegateOfHeightChangeInKeyboardDidShow;
	float _keyboardHeight;
	BOOL _suppressScrollingOnNextKeyboardWillShow;
	NSObject<OS_dispatch_group>* _keyboardDispatchGroup;
	float _lastKeyboardDragOffset;
	BOOL _lastKeyboardDragDirectionIsUp;
	CGAffineTransform _keyboardTransformBeforeKeyboardDrag;
	NSNumber* _externalDragInProgressStartingWithKeyboardShown;
	CGRect _prevStatusBarFrame;
	BOOL _isUsingExternalKeyboard;
	BOOL _lastKeyWindowWasModalWindow;
	BOOL _forceViewRotationOnShowingOrHidingKeyboard;
	BOOL _isRegisteredForKeyboardNotifications;
	BOOL _unregisterForKeyboardNotificationsOnHide;
	WAWebPageFromTextLoader* _webPageLoader;
	BOOL _interactiveKeyboardDraggingInProgress;
	BOOL _enabled;
	BOOL _scrollToBottomOnShowKeyboardOnAppear;
	BOOL _interactiveKeyboardDraggingEnabled;
	BOOL _showKeyboardOnAppear;
	UIViewController<WAChatBarManagerDelegate>* _delegate;
}
@property(readonly, assign, nonatomic) UIButton* pttButton;
@property(readonly, assign, nonatomic) UIButton* attachMediaButton;
@property(assign, nonatomic, getter=isKeyboardPresentationDisabled) BOOL keyboardPresentationDisabled;
@property(assign, nonatomic, getter=isEnabled) BOOL enabled;
@property(readonly, assign, nonatomic) BOOL shouldAutorotate;
@property(assign, nonatomic) BOOL interactiveKeyboardDraggingEnabled;
@property(assign, nonatomic) float chatBarAlpha;
@property(assign, nonatomic) BOOL scrollToBottomOnShowKeyboardOnAppear;
@property(assign, nonatomic) BOOL showKeyboardOnAppear;
@property(readonly, assign, nonatomic) BOOL interactiveKeyboardDraggingInProgress;
@property(copy, nonatomic) NSString* text;
@property(readonly, assign, nonatomic) float bottomInset;
@property(readonly, assign, nonatomic) float contentViewHeight;
@property(readonly, assign, nonatomic) UIView* contentView;
@property(assign, nonatomic) __weak UIViewController<WAChatBarManagerDelegate>* delegate;
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
+(void)windowDidBecomeVisible:(id)window;
+(void)windowDidResignKey:(id)window;
+(void)windowDidBecomeKey:(id)window;
+(void)initialize;
-(void).cxx_destruct;
-(id)findDictationButtonInView:(id)view;
-(void)reallyCheckDictationButton;
-(void)checkDictationButton;
-(void)endDraggingChatBarWithTranslation:(float)translation;
-(void)updateChatBarDraggingWithTranslation:(float)translation;
-(BOOL)beginDraggingChatBar;
-(void)handleChatBarDragging:(id)dragging;
-(void)chatBarDidEndDragging:(id)chatBar;
-(void)chatBarDidDrag:(id)chatBar;
-(void)beginDraggingWithKeyboardShown;
-(void)chatBarDidBeginDragging:(id)chatBar;
-(void)hideKeyboardAfterDragging;
-(CGAffineTransform)applyTranslation:(float)translation toKeyboardWindowTransform:(CGAffineTransform)keyboardWindowTransform;
-(void)endDraggingWithKeyboardOffset:(float)keyboardOffset;
-(void)updateDraggingWithKeyboardOffset:(float)keyboardOffset;
-(void)webPageFromTextLoaderDidUpdateMetadata:(id)webPageFromTextLoader;
-(void)chatBarWantsToDismissWebURLPreview:(id)dismissWebURLPreview;
-(void)chatBarWantsToScrollToTop:(id)top;
-(void)chatBar:(id)bar didCancelPTTRecordingByUser:(BOOL)user;
-(void)chatBarDidEndPTTRecording:(id)chatBar;
-(double)chatBarWillEndPTTRecording:(id)chatBar;
-(void)chatBarDidBeginPTTRecording:(id)chatBar;
-(BOOL)chatBarShouldBeginPTTRecording:(id)chatBar;
-(void)chatBarDidChangeHeight:(id)chatBar;
-(void)chatBarUserDidSubmitText:(id)chatBarUser;
-(void)chatBarWantsToPresentCamera:(id)presentCamera;
-(void)chatBarWantsToAttachMedia:(id)attachMedia;
-(void)chatBar:(id)bar didPasteImage:(id)image;
-(void)chatBarDidChangeText:(id)chatBar;
-(void)chatBarDidEndEditing:(id)chatBar;
-(void)chatBarWillEndEditing:(id)chatBar;
-(void)chatBarDidBeginEditing:(id)chatBar;
-(BOOL)chatBarShouldBeginEditing:(id)chatBar;
-(void)chatBarUserDidFocusChatBar:(id)chatBarUser;
-(void)chatBarDidMoveToWindow:(id)chatBar;
-(void)chatBar:(id)bar willMoveToWindow:(id)window;
-(float)chatBarMaximumHeight:(id)height;
-(unsigned)chatBarVisibleConnectionStatus:(id)status;
-(void)keyboardDidHide:(id)keyboard;
-(void)keyboardWillHide:(id)keyboard;
-(void)keyboardDidChangeFrame:(id)keyboard;
-(void)keyboardWillChangeFrame:(id)keyboard;
-(void)keyboardDidShow:(id)keyboard;
-(void)keyboardWillShow:(id)keyboard;
-(BOOL)isKeyboardFrameChangeNotification:(id)notification;
-(CGRect)rectRoundedToNearestPoint:(CGRect)nearestPoint;
-(BOOL)rect:(CGRect)rect intersectsRect:(CGRect)rect2;
-(void)ensureKeyboardHidden;
-(void)applicationWillDismissCallWindow:(id)application;
-(void)applicationWillPresentCallWindow:(id)application;
-(void)resetKeyboardLayout;
-(void)applicationDidChangeStatusBarFrame:(id)application;
-(void)applicationWillChangeStatusBarFrame:(id)application;
-(void)delegateWillDisappearWithoutInteraction;
-(void)updatePlaceholderChatBarFromChatBar;
-(void)setNeedsUpdateButtons;
-(void)makeMainApplicationWindowKeyWindow;
-(void)makeKeyboardWindowKeyWindow;
-(void)restoreKeyWindow;
-(BOOL)isKeyboardVisible;
-(void)hideKeyboard;
-(BOOL)showKeyboard;
-(void)showPopupMenuForMessageCell:(id)messageCell;
-(void)cancelPTTRecording;
-(void)setPTTRecordingTime:(double)time;
-(void)didChangeInterfaceOrientation;
-(void)willAnimateRotationToInterfaceOrientation:(int)interfaceOrientation;
-(void)willChangeInterfaceOrientation;
-(void)unregisterForKeyboardNotificationsIfNeeded;
-(void)registerForKeyboardNotificationsIfNeeded;
-(void)dealloc;
-(id)initWithInitialWidth:(float)initialWidth;
-(void)windowDidBecomeKey:(id)window;
@end

